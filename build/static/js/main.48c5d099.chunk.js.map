{"version":3,"sources":["reportWebVitals.js","utilities/icons.js","components/Form/Form.tsx","utilities/apiCalls.ts","components/Result/Result.tsx","components/ResultsView/ResultsView.tsx","components/Favorite/Favorite.tsx","components/FavoritesView/FavoritesView.tsx","utilities/useLocalStorage.tsx","components/NavBar/NavBar.tsx","components/App/App.tsx","index.tsx"],"names":["exports","__esModule","onPerfEntry","Function","Promise","resolve","then","require","_a","getCLS","getFID","getFCP","getLCP","getTTFB","amorous","React","createElement","aria-hidden","focusable","data-prefix","data-icon","className","role","xmlns","viewBox","fill","d","excited","chill","sad","happy","angry","spotify","arrow","data-name","x","y","Form","_ref","getMoodyTunes","updateMood","_useState","useState","_useState2","_slicedToArray","mood","setMood","_useState3","_useState4","moodName","setMoodName","_useState5","_useState6","decade","setDecade","getStylings","selector","elementId","handleMood","moodNum","moodWord","action","concat","onClick","event","Link","to","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","reject","invoke","record","result","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","createUrl","valence","arousal","getTracksByMoodAPI","_asyncToGenerator","_callee","response","jsonResponse","_context","console","log","fetch","status","json","tracks","track","_x","_x2","_x3","apply","arguments","Result","id","artist","title","releaseDate","genre","favoriteSongs","addFavorite","inFavorites","setInFavorites","useEffect","checkFavoriteStatus","find","song","animateAddFavorite","tl","gsap","timeline","set","transition","transform","duration","translateY","rotateY","filter","cursor","color","borderColor","backgroundColor","border","ease","repeat","rotate","capitalize","songInfo","split","map","word","toUpperCase","substring","join","searchParams","window","open","searchSpotify","data-testid","ResultsView","songResults","document","songs","artist_display_name","releasedate","Favorite","removeFavorite","FavoritesView","favorites","fav","useLocalStorage","initialValue","localStorage","getItem","JSON","parse","setState","setItem","stringify","NavBar","clearMoodName","handleClick","App","setSongResults","setFavoriteSongs","_useLocalStorage","_useLocalStorage2","setLocalStorage","storedFavs","results","favorite","includes","_toConsumableArray","Routes","Route","path","element","router","BrowserRouter","basename","process","ReactDOM","render","getElementById","reportWebVitals"],"mappings":"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","file":"static/js/main.48c5d099.chunk.js","sourcesContent":["// \"use strict\";\nexports.__esModule = true;\nvar reportWebVitals = function (onPerfEntry) {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        Promise.resolve().then(function () { return require('web-vitals'); }).then(function (_a) {\n            var getCLS = _a.getCLS, getFID = _a.getFID, getFCP = _a.getFCP, getLCP = _a.getLCP, getTTFB = _a.getTTFB;\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\nexports[\"default\"] = reportWebVitals;\n","import React from \"react\";\n\nexport const amorous = (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    data-prefix=\"far\"\n    data-icon=\"kiss-wink-heart\"\n    className=\"svg-inline--fa fa-kiss-wink-heart fa-w-16\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 504 512\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M304 308.5c0-19.2-28.8-41.5-71.5-44-3.8-.4-7.4 2.4-8.2 6.2-.9 3.8 1.1 7.7 4.7 9.2l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-5.7 2.4-6 12.2 0 14.8l16.9 7.2c13 5.5 20.8 13.5 20.8 21.5s-7.8 16-20.7 21.5l-17 7.2c-3.6 1.5-5.6 5.4-4.7 9.2.8 3.6 4.1 6.2 7.8 6.2h.5c42.8-2.5 71.5-24.8 71.5-44 0-13-13.4-27.3-35.2-36 21.7-9.1 35.1-23.4 35.1-36.4zm70.5-83.5l9.5 8.5c3.8 3.3 9.3 4 13.7 1.6 4.4-2.4 6.9-7.4 6.1-12.4-4-25.2-34.2-42.1-59.8-42.1s-55.9 16.9-59.8 42.1c-.8 5 1.7 10 6.1 12.4 5.8 3.1 11.2.7 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0zM136 208.5c0 17.7 14.3 32 32 32s32-14.3 32-32-14.3-32-32-32-32 14.3-32 32zm365.1 194c-8-20.8-31.5-31.5-53.1-25.9l-8.4 2.2-2.3-8.4c-5.9-21.4-27-36.5-49-33-25.2 4-40.6 28.6-34 52.6l22.9 82.6c1.5 5.3 7 8.5 12.4 7.1l83-21.5c24.1-6.3 37.7-31.8 28.5-55.7zM334 436.3c-26.1 12.5-55.2 19.7-86 19.7-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200c0 22.1-3.7 43.3-10.4 63.2 9 6.4 17 14.2 22.6 23.9 6.4.1 12.6 1.4 18.6 2.9 10.9-27.9 17.1-58.2 17.1-90C496 119 385 8 248 8S0 119 0 256s111 248 248 248c35.4 0 68.9-7.5 99.4-20.9-2.5-7.3 4.3 17.2-13.4-46.8z\"\n    ></path>\n  </svg>\n);\n\nexport const excited = (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    data-prefix=\"far\"\n    data-icon=\"laugh-wink\"\n    className=\"svg-inline--fa fa-laugh-wink fa-w-16\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 496 512\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm141.4 389.4c-37.8 37.8-88 58.6-141.4 58.6s-103.6-20.8-141.4-58.6C68.8 359.6 48 309.4 48 256s20.8-103.6 58.6-141.4C144.4 76.8 194.6 56 248 56s103.6 20.8 141.4 58.6c37.8 37.8 58.6 88 58.6 141.4s-20.8 103.6-58.6 141.4zM328 164c-25.7 0-55.9 16.9-59.9 42.1-1.7 11.2 11.5 18.2 19.8 10.8l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c8.5 7.4 21.6.3 19.8-10.8-3.8-25.2-34-42.1-59.7-42.1zm-160 60c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm194.4 64H133.6c-8.2 0-14.5 7-13.5 15 7.5 59.2 58.9 105 121.1 105h13.6c62.2 0 113.6-45.8 121.1-105 1-8-5.3-15-13.5-15z\"\n    ></path>\n  </svg>\n);\n\nexport const chill = (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    data-prefix=\"far\"\n    data-icon=\"meh\"\n    className=\"svg-inline--fa fa-meh fa-w-16\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 496 512\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm8 144H160c-13.2 0-24 10.8-24 24s10.8 24 24 24h176c13.2 0 24-10.8 24-24s-10.8-24-24-24z\"\n    ></path>\n  </svg>\n);\n\nexport const sad = (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    data-prefix=\"far\"\n    data-icon=\"sad-cry\"\n    className=\"svg-inline--fa fa-sad-cry fa-w-16\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 496 512\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm144 386.4V280c0-13.2-10.8-24-24-24s-24 10.8-24 24v151.4C315.5 447 282.8 456 248 456s-67.5-9-96-24.6V280c0-13.2-10.8-24-24-24s-24 10.8-24 24v114.4c-34.6-36-56-84.7-56-138.4 0-110.3 89.7-200 200-200s200 89.7 200 200c0 53.7-21.4 102.5-56 138.4zM205.8 234.5c4.4-2.4 6.9-7.4 6.1-12.4-4-25.2-34.2-42.1-59.8-42.1s-55.9 16.9-59.8 42.1c-.8 5 1.7 10 6.1 12.4 4.4 2.4 9.9 1.8 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c2.5 2.3 7.9 4.8 13.7 1.6zM344 180c-25.7 0-55.9 16.9-59.8 42.1-.8 5 1.7 10 6.1 12.4 4.5 2.4 9.9 1.8 13.7-1.6l9.5-8.5c14.8-13.2 46.2-13.2 61 0l9.5 8.5c2.5 2.2 8 4.7 13.7 1.6 4.4-2.4 6.9-7.4 6.1-12.4-3.9-25.2-34.1-42.1-59.8-42.1zm-96 92c-30.9 0-56 28.7-56 64s25.1 64 56 64 56-28.7 56-64-25.1-64-56-64z\"\n    ></path>\n  </svg>\n);\n\nexport const happy = (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    data-prefix=\"far\"\n    data-icon=\"smile-beam\"\n    className=\"svg-inline--fa fa-smile-beam fa-w-16\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 496 512\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm84-143.4c-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.6-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8-10.2-8.4-25.3-7.1-33.8 3.1zM136.5 211c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4s-52.7 29.3-56 71.4c-.3 3.7 2.1 7.2 5.7 8.3 3.4 1.1 7.4-.5 9.3-3.7l9.5-17zM328 152c-23.8 0-52.7 29.3-56 71.4-.3 3.7 2.1 7.2 5.7 8.3 3.5 1.1 7.4-.5 9.3-3.7l9.5-17c7.7-13.7 19.2-21.6 31.5-21.6s23.8 7.9 31.5 21.6l9.5 17c2.1 3.7 6.2 4.7 9.3 3.7 3.6-1.1 6-4.5 5.7-8.3-3.3-42.1-32.2-71.4-56-71.4z\"\n    ></path>\n  </svg>\n);\n\nexport const angry = (\n  <svg\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    data-prefix=\"far\"\n    data-icon=\"tired\"\n    className=\"svg-inline--fa fa-tired fa-w-16\"\n    role=\"img\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 496 512\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm129.1-303.8c-3.8-4.4-10.3-5.4-15.3-2.5l-80 48c-3.6 2.2-5.8 6.1-5.8 10.3s2.2 8.1 5.8 10.3l80 48c5.4 3.2 11.8 1.6 15.3-2.5 3.8-4.5 3.9-11 .1-15.5L343.6 208l33.6-40.3c3.8-4.5 3.7-11.1-.1-15.5zM220 208c0-4.2-2.2-8.1-5.8-10.3l-80-48c-5-3-11.5-1.9-15.3 2.5-3.8 4.5-3.9 11-.1 15.5l33.6 40.3-33.6 40.3c-3.8 4.5-3.7 11 .1 15.5 3.5 4.1 9.9 5.7 15.3 2.5l80-48c3.6-2.2 5.8-6.1 5.8-10.3zm28 64c-45.4 0-100.9 38.3-107.8 93.3-1.5 11.8 6.9 21.6 15.5 17.9C178.4 373.5 212 368 248 368s69.6 5.5 92.3 15.2c8.5 3.7 17-6 15.5-17.9-6.9-55-62.4-93.3-107.8-93.3z\"\n    ></path>\n  </svg>\n);\n\nexport const spotify = (\n  <svg className=\"btn spotify-svg\" viewBox=\"0 0 25 25\">\n    <path\n      className=\"\"\n      d=\"M19.098 10.638c-3.868-2.297-10.248-2.508-13.941-1.387-.593.18-1.22-.155-1.399-.748-.18-.593.154-1.22.748-1.4 4.239-1.287 11.285-1.038 15.738 1.605.533.317.708 1.005.392 1.538-.316.533-1.005.709-1.538.392zm-.126 3.403c-.272.44-.847.578-1.287.308-3.225-1.982-8.142-2.557-11.958-1.399-.494.15-1.017-.129-1.167-.623-.149-.495.13-1.016.624-1.167 4.358-1.322 9.776-.682 13.48 1.595.44.27.578.847.308 1.286zm-1.469 3.267c-.215.354-.676.465-1.028.249-2.818-1.722-6.365-2.111-10.542-1.157-.402.092-.803-.16-.895-.562-.092-.403.159-.804.562-.896 4.571-1.045 8.492-.595 11.655 1.338.353.215.464.676.248 1.028zm-5.503-17.308c-6.627 0-12 5.373-12 12 0 6.628 5.373 12 12 12 6.628 0 12-5.372 12-12 0-6.627-5.372-12-12-12z\"\n    />\n  </svg>\n);\n\nexport const musicNote = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    strokeWidth=\"0.501\"\n    strokeLinejoin=\"bevel\"\n    fillRule=\"evenodd\"\n    version=\"1.1\"\n    overflow=\"visible\"\n    viewBox=\"0 0 75 93.75\"\n    x=\"0px\"\n    y=\"0px\"\n  >\n    <g\n      fill=\"none\"\n      stroke=\"black\"\n      fontFamily=\"Times New Roman\"\n      fontSize=\"16\"\n      transform=\"scale(1 -1)\"\n    >\n      <g transform=\"translate(0 -75)\">\n        <g>\n          <path\n            d=\"M 12.99,1.455 C 12.458,1.521 11.99,1.583 11.474,1.743 C 10.236,2.127 8.989,2.993 8.171,3.994 C 7.895,4.332 7.684,4.672 7.491,5.061 C 6.837,6.376 6.876,7.987 7.347,9.356 L 7.688,10.209 L 7.375,10.482 L 7.368,10.639 L 7.525,10.646 L 7.776,10.425 L 8.418,11.607 C 8.907,12.447 9.566,13.232 10.201,13.961 C 10.538,14.348 10.9,14.711 11.269,15.066 L 12.229,15.915 L 12.717,16.429 C 13.141,16.823 13.588,17.183 14.058,17.501 L 15.297,18.206 L 15.291,18.313 C 15.351,18.38 15.456,18.387 15.528,18.321 L 15.707,18.389 L 16.464,18.838 C 16.697,18.96 16.931,19.08 17.172,19.186 L 17.326,19.253 L 18.105,19.573 C 18.266,19.626 18.426,19.688 18.587,19.741 L 18.884,19.814 L 18.875,19.926 C 18.928,19.989 19.024,19.997 19.087,19.944 L 19.16,19.882 L 19.527,19.973 C 19.798,20.019 20.054,20.048 20.327,20.071 C 20.627,20.096 21.003,20.09 21.301,20.053 C 21.583,20.018 21.833,19.978 22.08,19.922 L 22.52,19.794 L 22.316,19.958 C 22.054,20.154 21.777,20.331 21.508,20.517 C 21.439,20.562 21.421,20.656 21.466,20.725 C 21.511,20.794 21.605,20.812 21.674,20.767 L 23.585,19.352 L 23.64,19.327 C 24.064,19.088 24.462,18.802 24.827,18.478 L 25.167,18.106 L 25.88,17.533 L 26.197,17.298 L 26.199,17.705 C 26.188,18.464 26.184,19.223 26.172,19.982 C 26.14,21.942 26.075,23.911 25.996,25.87 C 25.897,28.324 25.791,30.778 25.683,33.231 C 25.611,34.875 25.531,36.521 25.486,38.166 C 25.475,38.582 25.472,38.999 25.463,39.415 C 25.442,40.379 25.434,41.342 25.429,42.306 L 25.451,46.304 L 25.4,47.08 C 25.342,48.074 25.3,49.067 25.248,50.061 C 25.218,50.622 25.199,51.189 25.183,51.751 L 25.173,52.467 L 25.065,52.44 C 24.944,52.407 24.816,52.479 24.783,52.6 C 24.75,52.721 24.822,52.849 24.943,52.882 L 25.166,52.948 L 25.121,56.29 L 25.156,57.469 L 24.894,57.775 C 24.846,57.835 24.857,57.924 24.917,57.972 C 24.977,58.02 25.066,58.009 25.114,57.949 L 25.172,57.883 L 25.189,58.145 L 25.157,58.842 C 25.157,58.911 25.179,58.974 25.231,59.039 L 25.263,59.298 L 25.311,59.762 L 24.779,60.228 L 24.769,60.362 L 24.903,60.372 L 25.336,60.008 L 25.33,60.438 L 25.422,61.199 L 24.552,61.052 C 24.429,61.033 24.312,61.116 24.293,61.239 C 24.274,61.362 24.357,61.479 24.48,61.498 L 25.369,61.653 L 25.045,61.97 L 25.045,62.045 L 24.543,61.959 C 24.472,61.945 24.401,61.99 24.387,62.061 C 24.373,62.132 24.418,62.203 24.489,62.217 C 24.762,62.275 25.026,62.342 25.295,62.416 L 25.88,62.574 L 25.945,62.692 L 26.829,62.955 L 26.825,63.012 C 26.886,63.083 26.994,63.091 27.067,63.027 L 64.141,74.069 C 64.205,74.087 64.273,74.051 64.291,73.987 C 64.309,73.923 64.273,73.855 64.209,73.837 L 28.862,63.308 L 30.32,63.664 C 32.079,64.124 33.824,64.627 35.571,65.131 C 37.798,65.773 40.028,66.416 42.247,67.085 L 44.646,67.819 L 44.662,67.894 C 44.726,67.988 44.856,68.012 44.968,67.935 L 50.393,69.578 L 56.171,71.3 L 56.121,71.332 L 56.191,71.442 L 58.151,71.89 L 59.264,72.222 C 60.593,72.602 61.928,72.985 63.267,73.328 C 63.363,73.354 63.461,73.338 63.542,73.292 L 63.628,73.18 L 64.421,73.412 C 64.632,73.476 64.851,73.525 65.06,73.594 C 65.252,73.658 65.458,73.631 65.539,73.418 C 65.582,73.306 65.531,73.071 65.513,72.948 C 65.495,72.821 65.49,72.696 65.473,72.571 C 65.438,72.312 65.393,72.054 65.353,71.795 L 65.217,70.914 L 65.18,69.196 L 65.29,69.107 C 65.396,69.03 65.42,68.88 65.343,68.774 C 65.304,68.721 65.247,68.688 65.178,68.681 L 65.061,63.651 L 65.061,26.849 L 65.117,26.716 L 65.061,26.56 L 65.061,25.3 L 65.224,23.796 L 65.17,23.022 L 65.301,22.779 C 65.406,22.575 65.489,22.362 65.59,22.156 C 65.618,22.093 65.59,22.017 65.527,21.989 C 65.464,21.961 65.388,21.989 65.36,22.052 L 65.135,22.51 L 65.119,22.267 C 65.092,22.081 65.047,21.891 65.015,21.705 C 64.983,21.52 64.924,21.33 64.882,21.146 C 64.844,20.98 64.787,20.814 64.737,20.651 L 64.636,20.397 L 64.537,20.085 L 64.504,19.944 L 64.287,19.308 L 64.796,18.935 C 64.886,18.827 65.01,18.613 64.975,18.471 C 64.949,18.366 64.909,18.3 64.811,18.247 C 64.6,18.134 64.316,18.337 64.129,18.437 L 63.952,18.541 L 63.854,18.325 C 63.703,18.048 63.533,17.777 63.35,17.515 L 63.135,17.254 L 62.382,16.169 C 61.759,15.362 61.057,14.616 60.302,13.944 C 59.89,13.577 59.391,13.232 58.924,12.937 C 58.471,12.651 58.019,12.402 57.551,12.19 L 56.593,11.844 L 56.195,11.625 C 55.587,11.296 54.966,11.02 54.322,10.769 C 53.017,10.261 51.612,9.942 50.209,10.023 C 49.057,10.089 47.993,10.553 47.249,11.377 L 47.161,11.508 L 46.822,11.66 C 46.445,11.879 46.095,12.143 45.761,12.474 C 44.532,13.69 44.068,15.404 44.072,17.108 L 43.806,17.322 L 43.789,17.443 L 43.91,17.46 L 44.086,17.331 L 44.164,18.544 C 44.184,18.674 44.194,18.808 44.218,18.937 L 44.338,19.556 L 44.12,19.765 L 44.119,19.892 L 44.246,19.893 L 44.379,19.768 L 44.426,20.008 L 44.525,20.073 L 44.59,19.974 L 44.519,19.637 L 44.873,19.307 L 45.252,20.205 C 45.387,20.491 45.551,20.789 45.717,21.058 C 45.946,21.429 46.178,21.797 46.438,22.147 L 46.508,22.233 L 46.953,22.984 C 47.146,23.298 47.396,23.649 47.635,23.929 C 47.728,24.038 47.825,24.144 47.92,24.251 L 47.987,24.32 L 47.846,24.476 L 47.855,24.617 L 47.996,24.608 L 48.128,24.463 L 48.611,24.955 L 49.296,25.504 L 48.958,25.934 C 48.919,25.989 48.933,26.067 48.988,26.106 C 49.043,26.145 49.121,26.131 49.16,26.076 L 49.505,25.639 L 50.065,25.942 L 50.752,26.555 L 50.592,26.745 C 50.552,26.795 50.561,26.87 50.611,26.91 C 50.661,26.95 50.736,26.941 50.776,26.891 L 50.946,26.728 C 51.415,27.088 51.905,27.406 52.426,27.682 L 52.92,27.915 L 52.836,28.023 C 52.784,28.091 52.797,28.19 52.865,28.242 C 52.933,28.294 53.032,28.281 53.084,28.213 L 53.201,28.071 L 53.968,28.499 L 54.721,28.842 L 54.606,28.988 C 54.549,29.066 54.565,29.178 54.643,29.235 C 54.721,29.292 54.833,29.276 54.89,29.198 L 55.043,28.988 L 55.167,29.045 C 55.571,29.206 55.976,29.342 56.377,29.446 C 56.822,29.561 57.228,29.61 57.682,29.657 C 57.9,29.68 58.152,29.672 58.372,29.665 C 59.865,29.616 61.235,28.975 62.327,27.963 C 62.527,27.777 62.736,27.564 62.907,27.351 L 63.412,26.683 L 63.099,30.178 L 62.984,32.826 L 62.891,33.321 C 62.802,33.817 62.719,34.321 62.64,34.819 C 62.584,35.171 62.507,35.53 62.461,35.882 C 62.441,36.02 62.536,36.151 62.674,36.171 L 62.842,36.128 L 62.833,36.345 C 62.792,37.816 62.771,39.285 62.754,40.757 C 62.738,42.116 62.766,43.485 62.793,44.844 C 62.833,46.87 62.889,48.892 62.963,50.917 C 63.029,52.745 63.1,54.579 63.203,56.405 C 63.246,57.168 63.276,57.932 63.326,58.694 C 63.36,59.493 63.412,60.292 63.444,61.092 L 63.586,63.932 L 61.166,63.097 L 61.053,62.999 C 60.623,62.843 60.185,62.705 59.751,62.56 C 59.023,62.317 58.295,62.077 57.565,61.84 C 56.067,61.354 54.568,60.869 53.063,60.404 C 49.869,59.416 46.679,58.437 43.47,57.497 L 38.274,56.031 L 38.256,55.918 C 38.17,55.781 37.988,55.739 37.851,55.825 L 37.756,55.884 L 35.354,55.207 C 33.402,54.664 31.445,54.136 29.492,53.593 C 28.827,53.408 28.156,53.235 27.494,53.041 L 27.157,52.959 L 27.25,51.353 C 27.278,50.298 27.283,49.242 27.296,48.188 C 27.308,47.217 27.287,46.242 27.275,45.271 C 27.24,42.473 27.107,39.671 26.942,36.878 L 26.86,34.4 L 26.86,27.798 L 27.124,20.22 L 27.233,16.535 L 27.44,16.383 C 27.641,16.246 27.857,16.097 28.068,15.976 C 28.183,15.9 28.215,15.742 28.139,15.627 C 28.063,15.512 27.905,15.48 27.79,15.556 L 27.244,15.955 L 27.255,15.003 L 27.333,14.778 L 27.397,14.772 C 27.498,14.754 27.679,14.668 27.749,14.595 C 28.018,14.314 28.052,14.076 28.081,13.698 C 28.096,13.495 28.116,13.296 27.887,13.192 C 27.808,13.156 27.728,13.165 27.65,13.191 L 27.58,13.223 L 27.592,12.791 C 27.566,12.104 27.455,11.393 27.251,10.736 L 27.152,10.499 L 27.125,10.367 C 27.037,10.078 26.944,9.812 26.838,9.53 C 26.418,8.417 25.552,7.263 24.728,6.424 C 24.38,6.07 24.016,5.732 23.636,5.41 L 22.592,4.586 C 22.556,4.531 22.502,4.498 22.441,4.488 L 21.193,3.694 C 20.761,3.444 20.319,3.214 19.868,3.004 L 19.5,2.859 C 19.114,2.66 18.711,2.482 18.296,2.327 L 18.108,2.268 L 18.62,1.761 C 18.695,1.696 18.703,1.582 18.638,1.507 C 18.573,1.432 18.459,1.424 18.384,1.489 L 17.58,2.103 L 17.023,1.93 L 16.772,1.881 L 16.658,1.845 C 16.418,1.781 16.168,1.708 15.923,1.664 C 15.16,1.526 14.468,1.422 13.688,1.425 C 13.463,1.426 13.213,1.427 12.99,1.455 Z M 13.636,2.212 L 13.204,2.315 L 12.543,2.601 L 12.582,2.46 L 12.541,2.395 L 13.162,2.245 L 13.636,2.212 Z M 12.392,2.431 L 12.328,2.695 L 12.103,2.793 C 11.696,3.011 11.314,3.262 10.959,3.541 L 10.311,4.146 L 10.492,3.684 C 10.524,3.601 10.547,3.511 10.583,3.429 L 10.547,3.367 L 10.493,3.397 C 10.422,3.558 10.375,3.74 10.306,3.905 L 10.131,4.314 L 9.974,4.461 C 9.371,5.126 8.876,5.892 8.497,6.728 L 8.353,7.181 L 8.327,6.631 C 8.364,5.577 8.676,4.566 9.38,3.723 C 9.509,3.568 9.651,3.427 9.821,3.279 L 9.608,3.519 C 9.529,3.606 9.413,3.754 9.353,3.854 L 9.354,3.947 L 9.447,3.946 L 9.568,3.864 L 9.469,4.085 C 9.351,4.305 9.215,4.514 9.038,4.736 C 8.927,4.875 8.796,4.998 8.675,5.128 L 8.677,5.276 L 8.825,5.274 C 9.165,4.927 9.42,4.608 9.659,4.183 C 9.745,4.03 9.827,3.858 9.891,3.695 L 9.914,3.635 L 10.603,3.177 C 11.041,2.919 11.457,2.713 11.936,2.542 L 12.392,2.431 Z M 14.953,2.6 L 15.723,2.645 C 16.009,2.69 16.269,2.755 16.542,2.84 L 16.646,2.884 L 16.31,3.168 L 15.702,3.658 L 15.742,3.538 C 15.791,3.408 15.818,3.255 15.86,3.121 C 15.878,3.055 15.838,2.985 15.772,2.967 C 15.706,2.949 15.636,2.989 15.618,3.055 C 15.551,3.285 15.482,3.507 15.409,3.735 L 15.32,3.967 L 14.259,4.825 L 13.411,5.495 L 13.813,4.717 C 14.078,4.22 14.348,3.726 14.615,3.23 L 14.953,2.6 Z M 14.72,2.606 L 14.077,3.779 C 13.773,4.324 13.445,4.866 13.152,5.415 L 12.881,5.915 L 10.101,8.117 L 10.412,7.183 C 10.544,6.859 10.696,6.541 10.857,6.227 L 10.984,5.993 L 11.112,5.907 C 11.635,5.531 12.167,5.158 12.67,4.755 C 13.214,4.319 13.725,3.86 14.252,3.406 C 14.338,3.33 14.346,3.198 14.27,3.112 C 14.194,3.026 14.062,3.018 13.976,3.094 C 13.72,3.314 13.458,3.543 13.208,3.77 C 13.036,3.926 12.843,4.072 12.667,4.224 C 12.327,4.518 11.963,4.799 11.61,5.077 L 11.395,5.233 L 11.861,4.371 C 12.057,3.994 12.244,3.586 12.388,3.168 L 12.891,2.933 C 13.203,2.822 13.523,2.735 13.852,2.678 L 14.72,2.606 Z M 17.769,2.757 L 18.001,2.84 L 18.473,3.055 L 18.328,3.101 L 17.769,2.757 Z M 17.122,3.089 L 17.306,3.168 L 18.073,3.694 L 17.612,4.064 L 17.065,4.496 L 17.248,4.052 C 17.325,3.85 17.383,3.645 17.451,3.44 L 17.392,3.327 L 17.279,3.386 C 17.135,3.833 16.979,4.278 16.767,4.698 L 16.735,4.758 L 15.53,5.712 L 14.41,6.563 L 14.786,5.785 C 14.98,5.371 15.189,4.963 15.369,4.542 L 15.418,4.414 L 16.384,3.687 L 17.122,3.089 Z M 12.135,3.265 L 12.062,3.47 C 11.76,4.144 11.392,4.747 11.013,5.382 L 10.891,5.599 L 10.284,6.041 C 10.026,6.217 9.757,6.374 9.495,6.544 L 9.409,6.599 L 9.482,6.279 C 9.513,6.158 9.56,6.021 9.603,5.904 L 10.056,4.784 L 11.112,3.859 C 11.393,3.666 11.681,3.49 11.978,3.334 L 12.135,3.265 Z M 18.475,3.994 L 18.957,4.456 L 18.863,4.697 L 18.636,5.165 L 16.713,6.595 L 15.739,7.354 L 15.935,6.872 C 15.996,6.73 16.069,6.587 16.137,6.448 L 16.599,5.502 L 16.678,5.445 C 17.061,5.159 17.435,4.858 17.814,4.567 L 18.475,3.994 Z M 19.29,4.112 L 19.417,4.162 L 19.74,4.346 L 19.523,4.507 L 19.29,4.112 Z M 8.578,4.336 L 8.487,4.506 C 8.396,4.69 8.316,4.88 8.253,5.085 C 8.087,5.621 7.997,6.18 7.977,6.742 L 8.034,7.421 L 7.828,6.809 L 7.758,6.773 L 7.722,6.843 L 7.951,7.463 L 7.578,7.652 L 7.528,6.936 C 7.562,6.451 7.67,5.97 7.869,5.501 C 8.044,5.087 8.271,4.719 8.578,4.336 Z M 19.093,4.587 L 19.234,4.722 L 18.947,4.934 L 19.093,4.587 Z M 20.242,4.631 L 20.537,4.798 L 20.47,4.997 L 19.904,6.157 L 18.224,7.384 L 17.729,7.767 L 17.81,7.522 L 18.552,5.849 L 19.573,5.114 L 19.7,5.267 C 19.736,5.323 19.813,5.34 19.869,5.304 C 19.925,5.268 19.942,5.191 19.906,5.135 L 19.795,4.953 L 20.242,4.631 Z M 14.977,4.747 L 14.631,5.449 L 13.827,7.007 L 12.104,8.319 L 12.847,6.59 L 13.051,6.195 L 14.307,5.253 L 14.977,4.747 Z M 20.699,4.89 L 20.862,4.983 L 21.18,5.225 L 20.683,5.59 L 20.3,5.869 L 20.509,5.423 L 20.699,4.89 Z M 9.838,5.024 L 9.261,6.536 L 9.216,6.723 L 8.584,7.133 L 8.728,6.708 C 8.778,6.604 8.83,6.486 8.888,6.387 C 8.976,6.238 9.055,6.085 9.149,5.94 C 9.362,5.61 9.58,5.333 9.838,5.024 Z M 21.641,5.576 L 22.181,5.987 L 22.412,6.219 L 22.707,6.659 L 22.625,6.688 L 22.228,6.891 L 22.323,6.522 L 22.262,6.419 L 22.159,6.48 C 22.124,6.6 22.099,6.725 22.064,6.845 L 21.988,7.014 L 21.485,7.273 C 21.071,7.515 20.678,7.756 20.283,8.029 C 20.124,8.139 19.953,8.248 19.802,8.367 L 18.918,9.055 L 19.076,8.532 C 19.241,8.119 19.433,7.715 19.621,7.322 L 19.89,6.746 L 20.938,6.038 L 21.641,5.576 Z M 16.178,5.81 L 16.048,6.056 C 15.875,6.38 15.686,6.719 15.512,7.065 L 15.222,7.757 L 13.281,9.272 L 10.297,11.794 L 9.578,10.656 L 9.836,10.451 C 10.085,10.266 10.349,10.09 10.592,9.9 C 11.346,9.31 12.107,8.734 12.884,8.174 L 13.49,7.74 L 13.247,8.305 C 13.193,8.437 13.155,8.58 13.105,8.714 C 13.071,8.822 13.13,8.939 13.238,8.973 C 13.346,9.007 13.463,8.948 13.497,8.84 C 13.544,8.638 13.622,8.428 13.689,8.232 L 14.063,7.329 L 15.776,6.104 L 16.178,5.81 Z M 18.172,6.123 L 17.633,7.21 L 17.255,8.134 L 15.438,9.544 C 15.112,9.817 14.791,10.094 14.466,10.368 C 14.254,10.547 14.048,10.734 13.844,10.922 C 13.489,11.249 13.125,11.574 12.785,11.916 L 11.495,13.313 L 10.455,12.04 L 13.79,9.284 L 14.979,8.426 L 14.889,8.729 C 14.863,8.839 14.931,8.951 15.041,8.977 C 15.151,9.003 15.263,8.935 15.289,8.825 L 15.494,8.055 L 18.172,6.123 Z M 10.481,6.333 L 10.035,7.131 C 9.899,7.421 9.76,7.759 9.695,8.072 C 9.666,8.178 9.728,8.29 9.862,8.315 L 8.803,9.242 L 8.591,8.813 L 8.521,8.536 L 8.384,7.731 L 8.483,7.435 L 9.572,6.906 C 9.814,6.776 10.073,6.615 10.298,6.457 L 10.481,6.333 Z M 12.512,6.599 L 12.427,6.758 C 12.146,7.285 11.908,7.833 11.662,8.376 L 11.661,8.523 L 11.737,8.6 L 10.702,9.393 C 10.524,9.532 10.34,9.668 10.169,9.815 L 9.446,10.446 L 9.227,10.099 L 8.9,9.439 L 9.228,9.151 C 9.807,8.669 10.398,8.2 10.998,7.736 L 12.512,6.599 Z M 19.485,7.02 L 19.452,7.088 C 19.249,7.458 19.045,7.845 18.868,8.228 C 18.759,8.463 18.648,8.705 18.55,8.952 L 18.369,9.518 L 18.21,9.654 C 18.076,9.763 17.95,9.889 17.821,10.005 C 17.605,10.2 17.391,10.395 17.182,10.597 C 16.615,11.146 16.06,11.694 15.506,12.258 C 14.939,12.836 14.378,13.429 13.804,13.999 L 12.948,14.845 L 11.864,13.765 L 11.629,13.478 L 12.691,12.323 C 13.528,11.496 14.426,10.719 15.353,9.984 L 17.054,8.731 L 16.896,9.323 C 16.873,9.457 16.854,9.591 16.83,9.724 C 16.815,9.839 16.897,9.947 17.012,9.962 C 17.127,9.977 17.235,9.895 17.25,9.78 C 17.28,9.386 17.349,9.003 17.446,8.628 L 17.527,8.383 L 18.192,7.894 L 19.485,7.02 Z M 22.977,7.097 L 23.354,7.833 L 23.553,8.338 L 23.05,8.581 C 22.578,8.866 22.113,9.144 21.66,9.464 L 20.525,10.35 L 20.632,10.062 C 20.923,9.459 21.282,8.89 21.592,8.299 L 21.942,7.571 L 22.889,7.138 L 22.977,7.097 Z M 8.022,7.656 L 8.065,7.771 L 8.086,8.024 L 8.01,8.268 L 8.106,8.361 L 8.121,8.42 C 8.176,8.69 8.24,8.951 8.303,9.219 L 8.409,9.583 L 8.08,9.841 C 7.878,9.355 7.725,8.876 7.629,8.393 L 7.591,7.843 L 8.022,7.656 Z M 21.669,7.731 L 21.591,7.909 C 21.266,8.495 20.91,9.068 20.568,9.645 L 20.018,10.746 L 19.674,11.015 C 19.033,11.561 18.413,12.132 17.811,12.715 C 17.21,13.297 16.658,13.926 16.085,14.536 L 14.529,16.148 L 14.444,16.094 C 14.198,15.909 13.949,15.724 13.713,15.527 C 13.584,15.419 13.457,15.305 13.327,15.199 L 13.089,14.985 L 13.794,14.293 C 14.26,13.842 14.714,13.371 15.176,12.914 C 15.949,12.149 16.715,11.404 17.511,10.696 L 18.461,9.943 L 18.604,9.92 C 18.648,9.894 18.681,9.851 18.694,9.799 L 18.71,9.745 L 20.032,8.696 L 21.669,7.731 Z M 24.508,8.509 L 24.651,8.697 L 25.281,9.735 L 25.068,10.196 L 24.901,10.087 C 24.82,10.071 24.734,10.086 24.661,10.136 C 24.331,10.374 23.993,10.601 23.667,10.846 L 22.547,11.715 L 22.634,11.496 C 22.865,10.966 23.121,10.445 23.33,9.927 C 23.419,9.707 23.5,9.486 23.586,9.265 L 23.698,8.888 L 23.787,8.837 L 23.868,8.928 C 23.949,8.969 24.045,8.98 24.138,8.95 C 24.23,8.92 24.302,8.855 24.343,8.774 L 24.359,8.577 L 24.508,8.509 Z M 23.394,9.062 L 23.36,9.176 C 23.236,9.503 23.105,9.806 22.962,10.126 L 22.045,12.114 L 20.407,13.504 C 19.635,14.165 18.878,14.856 18.128,15.542 L 16.24,17.239 L 14.746,16.286 L 16.72,14.387 C 16.992,14.135 17.265,13.885 17.538,13.635 C 17.664,13.52 17.797,13.41 17.919,13.291 L 19.816,11.576 L 19.724,11.965 C 19.704,12.235 19.732,12.449 19.767,12.713 C 19.786,12.822 19.892,12.894 20.001,12.875 C 20.11,12.856 20.182,12.75 20.163,12.641 C 20.046,12.208 20.07,11.757 20.169,11.317 L 20.194,11.248 L 22.516,9.567 L 23.394,9.062 Z M 26.02,9.308 L 26.541,10.308 L 26.737,10.893 L 26.872,11.714 C 26.911,12.093 26.921,12.474 26.903,12.855 L 26.888,12.973 L 26.877,12.881 L 26.781,12.307 C 26.748,11.865 26.646,11.398 26.524,10.992 L 26.469,10.747 L 26.02,9.308 Z M 8.803,9.524 L 8.883,9.692 C 8.929,9.784 8.97,9.881 9.02,9.971 C 9.116,10.144 9.2,10.326 9.299,10.497 L 9.328,10.548 L 9.224,10.639 L 9.131,10.446 L 8.803,9.524 Z M 8.485,9.803 L 8.761,10.595 L 8.91,10.913 L 8.845,10.971 L 8.832,11.12 L 8.993,11.123 L 9.565,12.304 L 9.798,12.682 L 8.755,11.178 L 8.191,10.061 L 8.485,9.803 Z M 25.431,10.056 L 25.688,10.611 L 25.808,10.938 L 25.962,11.592 L 25.996,11.802 L 25.856,11.722 C 25.778,11.712 25.696,11.732 25.629,11.784 C 25.315,12.027 25.003,12.29 24.694,12.541 L 23.91,13.149 L 24.43,12.074 C 24.599,11.748 24.783,11.422 24.943,11.093 C 25.053,10.867 25.18,10.642 25.28,10.413 L 25.431,10.056 Z M 51.74,10.832 L 52.626,11.037 L 52.228,10.949 C 51.957,10.904 51.694,10.862 51.421,10.827 C 51.316,10.814 51.209,10.811 51.105,10.798 C 50.994,10.784 50.878,10.781 50.766,10.779 L 50.341,10.774 L 49.687,10.832 C 50.367,10.699 51.09,10.72 51.74,10.832 Z M 9.449,10.759 L 9.768,11.313 L 10.151,11.917 L 9.956,12.09 L 9.832,11.901 L 9.328,10.855 L 9.449,10.759 Z M 23.689,12.839 L 23.357,13.578 L 23.049,13.818 C 22.291,14.41 21.526,14.99 20.785,15.603 C 20.141,16.134 19.522,16.681 18.937,17.261 L 18.18,18.112 L 17.672,17.927 L 16.57,17.402 L 16.734,17.259 C 17.651,16.449 18.566,15.638 19.496,14.843 L 21.748,13.003 L 21.691,13.176 C 21.604,13.532 21.55,13.902 21.541,14.295 C 21.537,14.412 21.628,14.511 21.745,14.515 C 21.862,14.519 21.961,14.428 21.965,14.311 C 21.968,14.174 21.964,14.034 21.974,13.898 C 21.993,13.632 22.033,13.378 22.086,13.117 L 22.225,12.619 L 24.753,10.875 C 24.41,11.533 24.025,12.176 23.689,12.839 Z M 52.727,11.06 L 52.96,11.114 L 53.408,11.26 L 52.727,11.06 Z M 49.203,11.265 L 48.221,11.569 L 47.892,11.755 L 48.34,11.427 L 48.761,11.295 L 49.203,11.265 Z M 51.016,11.802 L 50.506,11.929 L 49.1,12.443 L 49.16,12.212 L 49.319,12.132 C 49.705,11.994 50.122,11.897 50.545,11.835 L 51.016,11.802 Z M 46.803,12.044 L 46.62,12.319 L 46.441,12.754 L 45.656,13.463 C 45.377,13.785 45.132,14.142 44.938,14.521 C 44.575,15.228 44.398,15.996 44.38,16.773 L 44.389,16.886 L 44.284,16.964 L 44.278,16.499 C 44.32,15.918 44.423,15.344 44.618,14.791 C 44.811,14.243 45.068,13.69 45.437,13.236 C 45.752,12.848 46.028,12.567 46.429,12.265 L 46.803,12.044 Z M 10.312,12.159 L 11.332,13.489 L 11.06,13.783 L 10.8,13.452 L 10.076,12.293 L 10.145,12.298 L 10.312,12.159 Z M 26.057,12.177 L 26.101,12.446 L 25.62,13.157 C 25.448,13.397 25.299,13.691 25.151,13.948 L 24.695,14.941 L 23.164,16.09 C 22.543,16.592 21.935,17.111 21.329,17.629 L 19.958,18.76 C 19.867,18.719 19.776,18.693 19.729,18.677 C 19.361,18.547 18.982,18.372 18.608,18.268 L 18.384,18.186 L 18.861,17.65 C 19.614,16.909 20.426,16.243 21.27,15.609 L 23.098,14.318 L 22.925,14.915 C 22.87,15.195 22.846,15.472 22.834,15.757 C 22.83,15.877 22.924,15.981 23.044,15.985 C 23.164,15.989 23.268,15.895 23.272,15.775 C 23.276,15.633 23.274,15.488 23.282,15.346 C 23.297,15.091 23.351,14.77 23.415,14.523 L 23.612,13.955 L 23.877,13.769 C 24.594,13.276 25.299,12.777 26.005,12.27 L 26.057,12.177 Z M 54.024,12.191 L 54.289,12.209 L 54.623,12.357 L 55.304,12.765 L 55.234,12.783 L 53.318,14.246 L 53.455,13.79 C 53.5,13.618 53.524,13.41 53.551,13.233 C 53.569,13.116 53.576,12.997 53.584,12.879 C 53.587,12.843 53.59,12.78 53.534,12.781 C 53.471,12.783 53.319,12.953 53.266,13 C 53.041,13.199 52.817,13.406 52.597,13.611 L 52.593,13.691 L 52.673,13.695 C 52.82,13.558 52.968,13.421 53.117,13.285 L 53.453,12.986 L 53.419,13.298 L 53.106,14.409 L 52.769,14.667 L 50.562,16.467 L 51.446,14.543 L 51.644,13.975 L 52.285,13.513 C 52.387,13.437 52.408,13.292 52.332,13.19 C 52.256,13.088 52.111,13.067 52.009,13.143 L 51.813,13.293 L 51.845,13.163 C 51.869,12.964 51.886,12.78 51.89,12.579 L 51.885,12.418 L 53.023,12.234 C 53.356,12.208 53.691,12.19 54.024,12.191 Z M 48.913,12.324 L 48.874,12.481 L 48.854,12.534 L 48.012,12.843 L 47.546,13.059 L 47.986,12.767 L 48.913,12.324 Z M 51.759,12.438 L 51.758,12.793 C 51.75,12.902 51.734,13.009 51.721,13.117 L 51.657,13.412 L 50.474,14.323 C 49.782,14.87 49.086,15.411 48.404,15.97 L 47.614,16.644 L 47.714,16.071 C 47.81,15.667 47.951,15.271 48.092,14.963 C 48.14,14.858 48.183,14.746 48.229,14.64 L 48.405,14.242 L 48.567,14.122 C 48.734,13.989 48.917,13.853 49.074,13.709 C 49.28,13.521 49.479,13.333 49.682,13.142 L 49.737,12.997 L 51.448,12.489 L 51.759,12.438 Z M 47.429,12.693 L 47.123,12.98 L 47.173,12.895 L 47.429,12.693 Z M 26.142,12.797 L 26.152,12.93 C 26.152,13.253 26.118,13.595 26.047,13.918 L 25.983,14.087 L 25.153,14.607 L 25.323,14.188 C 25.5,13.821 25.699,13.464 25.912,13.139 L 26.142,12.797 Z M 55.651,12.972 L 55.813,13.07 L 56.921,13.958 L 56.264,14.435 L 56.26,13.976 L 56.209,13.929 L 56.162,13.98 L 56.177,14.498 L 54.348,15.829 L 51.687,18.044 L 52.623,15.981 L 52.948,15.229 L 55.562,13.221 C 55.622,13.176 55.658,13.11 55.668,13.04 L 55.651,12.972 Z M 48.966,13.286 L 48.742,13.481 L 48.789,13.356 L 48.966,13.286 Z M 48.495,13.472 L 48.3,13.893 L 48.102,14.067 C 47.824,14.297 47.544,14.526 47.26,14.749 L 46.255,15.496 L 46.448,15.1 C 46.616,14.817 46.797,14.543 46.997,14.284 L 47.239,14.019 L 47.954,13.687 L 48.495,13.472 Z M 11.463,13.659 L 11.884,14.208 L 12.746,15.045 L 12.582,15.208 L 12.581,15.347 L 12.72,15.348 L 12.887,15.183 L 13.758,16.029 L 14.355,16.5 L 14.444,16.569 C 14.585,16.667 14.723,16.772 14.864,16.87 C 15.004,16.967 15.151,17.057 15.292,17.153 L 15.921,17.526 L 15.629,17.789 L 14.517,17.078 C 14.111,16.794 13.716,16.497 13.331,16.199 L 12.632,15.607 L 12.24,15.23 C 12.125,15.114 12.017,14.987 11.91,14.864 L 11.193,13.952 L 11.463,13.659 Z M 45.994,13.893 L 45.684,14.523 C 45.517,14.977 45.42,15.453 45.379,15.939 L 45.384,16.143 L 44.94,16.474 L 44.951,16.163 C 45.005,15.801 45.103,15.443 45.252,15.091 C 45.427,14.677 45.654,14.309 45.933,13.956 L 45.994,13.893 Z M 58.342,14.011 L 59.218,14.693 L 59.344,14.799 L 59.164,15.13 L 58.377,14.227 L 58.279,14.13 L 58.342,14.011 Z M 27.493,14.126 L 27.501,14.19 C 27.507,14.269 27.506,14.348 27.492,14.426 L 27.405,14.569 L 27.438,14.476 L 27.493,14.126 Z M 51.43,14.13 L 51.049,15.047 L 50.167,16.786 L 48.256,18.329 C 47.753,18.73 47.279,19.173 46.784,19.585 L 46.447,19.852 L 46.172,19.096 C 46.132,18.973 46.08,18.832 46.052,18.707 L 45.953,18.32 L 47.265,17.23 L 47.434,17.399 C 47.528,17.399 47.605,17.322 47.605,17.228 L 47.607,16.947 L 49.542,15.494 L 51.43,14.13 Z M 46.851,14.2 L 46.579,14.514 C 46.446,14.713 46.33,14.908 46.204,15.11 C 46.128,15.231 46.066,15.376 46.002,15.504 L 45.899,15.761 L 45.752,15.87 L 45.752,15.696 C 45.818,15.178 45.958,14.676 46.187,14.204 L 46.274,14.298 C 46.35,14.342 46.44,14.362 46.523,14.345 C 46.611,14.327 46.716,14.264 46.799,14.225 L 46.851,14.2 Z M 57.427,14.366 L 57.278,14.61 C 56.867,15.12 56.414,15.615 56.138,16.211 L 56.169,16.326 L 56.284,16.295 C 56.44,16.03 56.789,15.724 57.02,15.521 C 57.217,15.347 57.431,15.162 57.631,14.966 L 57.797,14.772 L 58.381,15.418 L 58.053,15.586 C 57.828,15.72 57.606,15.855 57.384,15.992 L 55.683,17.195 L 55.741,17.051 C 55.922,16.6 56.103,16.006 56.18,15.528 L 56.234,15.072 L 56.78,14.708 L 57.427,14.366 Z M 26.385,14.536 L 26.452,15.107 L 26.415,15.21 L 26.413,14.79 L 26.32,14.697 L 26.385,14.536 Z M 48.004,14.541 L 47.486,15.8 C 47.415,16.023 47.358,16.25 47.32,16.486 L 47.286,16.926 L 45.901,18.111 L 45.76,17.254 L 45.869,16.556 L 46.07,15.914 L 47.41,14.986 L 48.004,14.541 Z M 59.5,14.93 L 59.982,15.335 C 60.412,15.677 60.838,16.042 61.225,16.432 L 61.261,16.371 L 61.163,16.145 L 62.026,16.995 L 62.128,17.111 L 60.684,17.917 L 60.676,17.763 C 60.665,17.661 60.652,17.568 60.623,17.469 L 60.58,17.381 L 60.863,16.612 C 60.881,16.556 60.851,16.494 60.795,16.476 L 60.724,16.499 C 60.753,16.405 60.741,16.321 60.696,16.25 C 60.605,16.107 60.413,16.065 60.27,16.156 L 60.001,16.34 L 59.315,15.304 L 59.5,14.93 Z M 25.361,15.455 C 25.318,15.513 25.283,15.577 25.241,15.635 C 25.19,15.705 25.132,15.772 25.079,15.841 L 24.551,16.357 L 24.824,15.453 L 25.643,14.951 C 25.574,15.11 25.457,15.325 25.361,15.455 Z M 26.195,14.952 L 26.196,15.713 L 25.99,16.188 L 25.711,16.654 L 25.118,17.236 C 24.851,17.456 24.564,17.65 24.265,17.816 C 24.061,17.929 23.852,18.023 23.642,18.121 C 23.418,18.226 23.199,18.302 22.966,18.381 C 22.837,18.425 22.683,18.482 22.55,18.512 C 22.086,18.615 21.651,18.712 21.175,18.769 C 21.091,18.779 21,18.78 20.915,18.786 L 20.446,18.805 L 21.2,18.175 C 22.192,17.336 23.216,16.54 24.276,15.79 L 24.369,15.732 L 23.986,16.845 C 23.954,16.958 24.02,17.076 24.133,17.108 C 24.246,17.14 24.364,17.074 24.396,16.961 L 24.47,16.668 L 24.602,16.68 C 24.753,16.548 24.925,16.425 25.069,16.287 C 25.215,16.147 25.364,16.012 25.507,15.868 C 25.66,15.714 25.806,15.533 25.94,15.363 L 26.195,14.952 Z M 56.103,15.159 L 56.072,15.435 C 56.014,15.731 55.933,16.024 55.828,16.34 L 55.368,17.418 L 54.917,17.738 C 54.109,18.352 53.352,19.016 52.582,19.675 C 52.139,20.054 51.712,20.462 51.289,20.863 C 50.684,21.436 50.097,22.026 49.525,22.629 L 48.934,23.278 L 48.299,22.697 L 48.188,22.702 L 48.193,22.813 L 48.841,23.381 L 48.631,23.611 L 48.183,23.042 L 47.45,21.867 L 48.248,21.219 C 48.598,20.933 48.944,20.644 49.295,20.359 L 51.001,18.983 L 50.814,19.803 C 50.8,19.91 50.876,20.01 50.983,20.024 C 51.09,20.038 51.19,19.962 51.204,19.855 C 51.203,19.775 51.223,19.655 51.237,19.575 L 51.499,18.581 L 52.391,17.863 C 53.336,17.12 54.294,16.415 55.27,15.717 L 56.103,15.159 Z M 52.61,15.488 L 51.993,16.727 C 51.805,17.077 51.621,17.427 51.454,17.785 L 51.19,18.457 L 49.171,20.14 L 47.327,21.67 L 47.215,21.49 L 46.557,20.125 L 48.067,19.027 C 48.456,18.753 48.824,18.441 49.196,18.144 L 49.771,17.688 L 49.689,17.89 C 49.528,18.314 49.424,18.777 49.38,19.228 C 49.365,19.381 49.318,19.661 49.531,19.682 C 49.635,19.692 49.706,19.606 49.769,19.54 C 49.911,19.391 49.929,19.197 49.911,19.001 L 49.874,18.854 L 49.843,18.904 L 49.757,19.042 L 49.751,18.959 C 49.792,18.548 49.895,18.142 50.031,17.745 L 50.19,17.357 L 50.595,17.038 L 52.61,15.488 Z M 58.927,16.064 L 59.398,16.754 L 58.141,17.617 L 58.927,16.064 Z M 58.613,16.143 L 58.411,16.517 C 58.158,16.955 57.907,17.395 57.653,17.832 L 57.546,18.026 L 56.097,19.023 L 54.582,20.194 L 54.84,19.258 L 55.34,18.048 L 56.865,17.036 C 57.232,16.812 57.595,16.58 57.986,16.343 L 57.819,16.548 L 57.874,16.602 C 58.108,16.538 58.279,16.468 58.424,16.362 L 58.613,16.143 Z M 26.604,16.332 L 26.601,16.429 L 26.426,16.576 L 26.604,16.332 Z M 45.368,16.401 L 45.417,17.419 L 45.454,17.603 L 45.416,17.901 L 45.435,18.511 L 45.219,18.716 L 45.094,18.344 C 45.001,17.983 44.938,17.619 44.912,17.254 L 44.931,16.717 L 45.368,16.401 Z M 60.603,16.673 L 60.43,17.082 L 60.307,16.859 L 60.603,16.673 Z M 26.588,17.011 L 26.542,18.969 C 26.49,20.321 26.445,21.675 26.39,23.027 L 26.335,24.71 L 26.358,23.646 C 26.375,22.861 26.385,22.076 26.395,21.291 C 26.402,20.726 26.418,20.158 26.415,19.593 C 26.411,18.9 26.422,18.204 26.426,17.51 L 26.423,17.132 L 26.588,17.011 Z M 44.405,17.1 L 44.468,17.936 C 44.535,18.321 44.638,18.702 44.774,19.071 L 44.795,19.121 L 44.475,19.426 L 44.457,19.338 C 44.398,18.977 44.332,18.611 44.302,18.246 L 44.287,17.185 L 44.405,17.1 Z M 59.71,17.233 L 59.906,17.594 C 59.937,17.65 59.961,17.715 59.996,17.768 L 60.08,17.909 L 59.785,18.457 L 58.922,19.006 L 56.919,20.458 L 57.271,19.437 L 57.711,18.482 L 59.71,17.233 Z M 62.514,17.593 L 63.223,18.55 L 63.391,18.873 L 62.896,19.186 L 62.987,18.989 C 63.038,18.852 63.092,18.707 63.15,18.573 C 63.174,18.511 63.143,18.44 63.081,18.416 C 63.019,18.392 62.948,18.423 62.924,18.485 C 62.854,18.644 62.802,18.814 62.73,18.971 L 62.506,19.433 L 61.537,20.049 C 61.068,20.351 60.606,20.68 60.152,21.004 L 58.248,22.456 L 58.316,22.195 C 58.517,21.604 58.794,21.033 59.112,20.423 C 59.342,19.98 59.583,19.531 59.829,19.097 L 59.86,19.03 L 60.783,18.499 L 62.514,17.593 Z M 16.241,17.693 L 17.442,18.274 L 17.901,18.425 L 17.788,18.552 L 17.601,18.511 C 17.227,18.411 16.868,18.304 16.503,18.174 L 15.962,17.939 L 16.241,17.693 Z M 54.948,18.308 L 54.592,19.033 C 54.411,19.424 54.253,19.809 54.125,20.203 L 54.029,20.622 L 53.793,20.805 C 52.93,21.538 52.05,22.287 51.277,23.116 C 51.07,23.338 50.852,23.555 50.652,23.782 L 50.194,24.362 L 49.088,23.418 L 49.564,22.896 C 51.194,21.224 52.998,19.681 54.882,18.353 L 54.948,18.308 Z M 18.109,18.494 L 18.822,18.729 L 18.581,18.703 C 18.434,18.682 18.279,18.661 18.135,18.628 L 18.014,18.601 L 18.109,18.494 Z M 23.946,18.551 L 23.864,18.615 C 23.698,18.722 23.551,18.825 23.373,18.914 C 23.317,18.942 23.264,18.976 23.209,19.005 C 22.705,19.265 21.931,19.513 21.362,19.553 C 21.197,19.565 21.028,19.587 20.862,19.587 C 20.516,19.587 20.153,19.579 19.812,19.519 L 19.642,19.478 L 19.839,19.314 L 21.355,19.265 C 21.957,19.191 22.552,19.061 23.13,18.871 C 23.366,18.793 23.609,18.703 23.847,18.601 L 23.946,18.551 Z M 45.443,18.774 L 45.448,18.926 C 45.459,19.038 45.481,19.151 45.493,19.262 L 45.569,19.641 L 45.454,19.413 L 45.287,18.919 L 45.443,18.774 Z M 57.153,18.842 L 56.582,20.206 L 56.436,20.829 L 54.646,22.35 C 53.915,23.009 53.204,23.72 52.524,24.46 L 51.598,25.555 L 51.526,25.499 L 50.386,24.526 L 50.768,24.044 C 50.966,23.827 51.175,23.621 51.376,23.408 C 51.828,22.928 52.327,22.495 52.816,22.054 C 53.16,21.744 53.534,21.445 53.902,21.155 L 53.844,21.429 C 53.831,21.569 53.933,21.695 54.073,21.708 C 54.213,21.721 54.339,21.619 54.352,21.479 L 54.429,20.781 L 57.153,18.842 Z M 18.638,19.225 L 19.37,19.305 L 19.27,19.391 L 18.741,19.266 L 18.638,19.225 Z M 59.299,19.353 L 58.684,20.479 C 58.437,20.948 58.205,21.426 58.015,21.915 L 57.738,22.844 C 57.285,23.218 56.833,23.589 56.402,23.983 C 56.22,24.149 56.043,24.306 55.873,24.485 C 55.473,24.907 55.08,25.33 54.688,25.76 C 54.304,26.182 53.943,26.634 53.577,27.076 L 52.979,26.64 L 51.798,25.713 L 52.977,24.355 C 53.762,23.546 54.593,22.779 55.446,22.08 L 56.293,21.439 L 56.144,22.076 C 56.129,22.202 56.219,22.318 56.345,22.333 C 56.471,22.348 56.587,22.258 56.602,22.132 L 56.774,21.076 L 57.619,20.438 C 58.119,20.082 58.642,19.746 59.174,19.425 L 59.299,19.353 Z M 45.881,19.386 L 46.109,20.121 L 45.926,19.62 L 45.881,19.386 Z M 63.72,19.506 L 63.692,19.617 C 63.68,19.683 63.678,19.753 63.687,19.829 L 63.798,19.655 L 63.924,19.897 L 63.956,19.996 L 63.747,20.532 L 63.539,20.948 L 62.74,21.55 L 61.108,22.841 L 61.364,22.263 L 62.344,20.36 L 63.002,19.929 L 63.72,19.506 Z M 46.2,20.385 L 46.654,21.33 L 46.979,21.96 L 46.822,21.756 L 46.648,21.465 C 46.483,21.153 46.337,20.832 46.213,20.511 L 46.2,20.385 Z M 64.096,20.428 L 64.123,20.509 L 64.023,20.584 L 64.096,20.428 Z M 61.879,20.666 L 60.85,22.53 L 60.462,23.352 L 58.58,24.842 L 58.148,25.235 L 58.055,24.86 C 58.008,24.602 57.981,24.342 57.984,24.089 L 58.049,23.407 L 60.155,21.799 L 61.879,20.666 Z M 64.286,22.444 L 64.25,22.739 L 64.118,22.824 C 63.703,23.094 63.266,23.379 62.889,23.701 L 62.11,24.421 L 62.515,23.518 C 62.671,23.204 62.84,22.894 63.009,22.587 L 63.39,21.878 L 64.253,21.297 C 64.293,21.68 64.303,22.063 64.286,22.444 Z M 61.678,24.341 C 61.562,24.589 61.473,24.841 61.379,25.098 L 60.446,25.964 C 60.161,26.244 59.867,26.511 59.578,26.786 C 59.375,26.979 59.162,27.182 58.949,27.363 C 58.646,27.62 58.342,27.896 58.024,28.133 L 57.667,28.403 L 56.217,28.335 L 55.664,28.229 L 57.555,26.296 L 57.993,25.915 L 58.065,25.925 C 58.132,25.907 58.186,25.862 58.218,25.806 L 58.23,25.71 L 58.593,25.396 L 60.154,24.177 L 59.883,25.145 C 59.857,25.27 59.938,25.395 60.063,25.421 C 60.188,25.447 60.313,25.366 60.339,25.241 C 60.4,24.934 60.452,24.633 60.537,24.331 L 60.734,23.728 L 62.79,22.301 C 62.401,22.986 62.006,23.637 61.678,24.341 Z M 64.909,23.51 L 64.929,23.726 L 64.888,24.223 L 64.87,23.586 L 64.909,23.51 Z M 48.996,23.516 L 50.099,24.483 L 49.743,24.935 L 49.623,24.82 C 49.507,24.704 49.402,24.577 49.294,24.454 L 48.759,23.774 L 48.996,23.516 Z M 57.564,23.79 L 57.531,24.192 C 57.529,24.454 57.548,24.72 57.592,24.989 L 57.726,25.62 L 56.938,26.337 C 56.406,26.856 55.895,27.396 55.423,27.958 L 55.267,28.154 L 55.015,28.106 L 54.667,27.998 L 54.648,27.87 L 53.853,27.284 L 54.038,27.061 C 54.643,26.4 55.256,25.799 55.931,25.209 C 56.103,25.059 56.276,24.9 56.454,24.758 C 56.65,24.602 56.838,24.418 57.025,24.251 L 57.564,23.79 Z M 63.702,23.945 L 63.654,24.032 L 63.55,25.173 L 62.172,26.282 L 61.961,26.109 L 61.679,25.862 C 61.689,25.786 61.698,25.721 61.711,25.661 L 61.764,25.422 L 61.951,25.265 C 62.439,24.867 62.937,24.481 63.452,24.123 L 63.702,23.945 Z M 50.288,24.649 L 51.281,25.519 L 51.49,25.682 L 51.144,26.091 L 50.714,25.789 L 50.015,25.197 L 49.924,25.109 L 50.288,24.649 Z M 64.482,25.072 L 64.464,26.293 L 64.216,26.923 C 64.185,26.989 64.214,27.07 64.28,27.101 L 64.453,27.038 L 64.445,27.535 L 64.243,27.999 C 64.056,28.473 63.887,28.955 63.74,29.448 L 63.545,30.226 L 63.789,26.473 L 63.824,26.137 L 64.193,25.651 L 64.482,25.072 Z M 63.397,25.72 L 63.373,25.778 L 63.081,26.265 L 62.523,26.808 C 62.27,27.019 61.947,27.234 61.66,27.399 C 61.456,27.516 61.238,27.611 61.025,27.71 C 60.666,27.878 60.216,28.038 59.826,28.127 C 59.582,28.183 59.337,28.242 59.09,28.284 C 58.924,28.312 58.752,28.33 58.585,28.353 L 58.23,28.361 C 58.493,28.171 58.755,27.958 59.002,27.754 C 59.509,27.336 60.012,26.912 60.51,26.483 L 61.194,25.904 L 61.197,26.128 C 61.263,26.236 61.508,26.413 61.614,26.501 L 61.755,26.618 L 60.834,27.36 C 60.775,27.409 60.767,27.499 60.816,27.558 C 60.865,27.617 60.955,27.625 61.014,27.576 L 62.133,26.704 L 62.197,26.689 L 62.258,26.682 L 62.25,26.617 L 63.397,25.72 Z M 64.911,25.802 L 64.913,26.143 L 64.908,25.873 L 64.911,25.802 Z M 51.69,25.837 L 53.465,27.219 L 53.256,27.486 L 52.98,27.364 L 52.758,27.227 L 51.346,26.233 L 51.69,25.837 Z M 53.733,27.428 L 54.333,27.895 L 53.826,27.738 L 53.57,27.625 L 53.733,27.428 Z M 61.35,28.124 L 61.247,28.204 C 61.081,28.311 60.934,28.414 60.756,28.503 C 60.7,28.531 60.647,28.565 60.592,28.594 C 60.088,28.854 59.314,29.102 58.745,29.142 C 58.58,29.154 58.411,29.176 58.245,29.176 C 57.899,29.176 57.536,29.168 57.195,29.108 L 56.124,28.855 L 55.993,28.801 L 56.728,28.904 L 57.083,28.911 L 57.065,29.016 C 57.111,29.082 57.205,29.098 57.271,29.052 L 57.462,28.918 L 57.776,28.925 C 58.864,28.883 59.876,28.714 60.895,28.331 L 61.35,28.124 Z M 64.434,28.338 L 64.416,29.652 C 64.389,30.692 64.34,31.733 64.315,32.773 C 64.289,33.873 64.287,34.976 64.267,36.076 C 64.206,39.469 64.155,42.863 64.125,46.257 C 64.103,48.802 64.095,51.349 64.11,53.894 L 64.294,64.001 L 64.153,60.766 C 64.069,58.854 63.933,56.942 63.857,55.03 C 63.812,53.898 63.759,52.766 63.71,51.634 C 63.64,50.023 63.597,48.409 63.552,46.798 C 63.502,45.018 63.483,43.235 63.461,41.455 C 63.449,40.542 63.426,39.629 63.416,38.716 C 63.402,37.417 63.401,36.116 63.415,34.817 L 63.478,32.284 L 63.689,31.018 C 63.748,30.726 63.807,30.424 63.883,30.136 C 64.04,29.541 64.21,28.962 64.411,28.394 L 64.434,28.338 Z M 26.206,30.918 L 26.219,34.839 L 26.291,36.238 L 26.236,36.9 L 26.078,38.573 L 26.082,38.112 C 26.104,37.325 26.1,36.535 26.114,35.747 C 26.141,34.254 26.166,32.761 26.199,31.269 L 26.206,30.918 Z M 26.369,37.74 L 26.438,39.049 C 26.463,39.637 26.502,40.225 26.523,40.813 C 26.575,42.247 26.628,43.678 26.653,45.113 C 26.682,46.797 26.699,48.494 26.659,50.177 L 26.578,52.819 L 26.335,52.76 L 26.153,50.181 C 26.078,48.317 26.043,46.461 26.029,44.595 L 26.033,44 L 26.082,43.205 C 26.105,42.846 26.136,42.486 26.155,42.127 L 26.369,37.74 Z M 64.913,49.428 L 64.913,54.912 L 64.908,54.501 C 64.901,53.563 64.904,52.624 64.896,51.686 L 64.913,49.428 Z M 25.648,53.091 L 25.738,53.118 L 25.855,54.648 L 25.789,54.752 L 25.612,54.943 L 25.648,53.091 Z M 26.374,53.311 L 26.552,53.367 L 26.549,53.418 L 26.399,53.67 L 26.374,53.311 Z M 27.124,53.545 L 27.227,53.578 L 30.101,54.386 L 31.767,55.012 L 36.638,56.61 L 36.265,56.86 L 35.795,57.186 L 32.306,56.126 L 32.494,55.991 C 32.627,55.894 32.657,55.706 32.56,55.573 C 32.463,55.44 32.275,55.41 32.142,55.507 L 31.617,55.916 L 30.579,55.601 L 30.814,55.447 C 30.916,55.381 30.945,55.242 30.879,55.14 C 30.813,55.038 30.674,55.009 30.572,55.075 L 30.059,55.444 L 29.043,55.135 L 29.342,54.945 C 29.436,54.884 29.462,54.756 29.401,54.662 C 29.34,54.568 29.212,54.542 29.118,54.603 C 28.934,54.728 28.75,54.856 28.558,54.982 L 28.117,54.854 L 28.01,54.911 L 28.067,55.018 L 28.356,55.106 L 28.049,55.294 L 26.891,56.008 L 26.98,55.252 L 27.069,55.179 C 27.147,55.128 27.232,55.091 27.321,55.08 C 27.4,55.057 27.446,54.973 27.423,54.894 C 27.4,54.815 27.316,54.769 27.237,54.792 L 27.025,54.88 L 27.069,54.513 L 27.124,53.545 Z M 26.492,53.89 L 26.471,54.011 L 26.433,54.157 L 26.423,54.014 L 26.492,53.89 Z M 26.514,54.634 L 26.498,55.064 L 26.476,54.756 L 26.514,54.634 Z M 25.874,54.884 L 25.919,55.469 L 25.809,55.429 L 25.62,55.514 L 25.612,55.105 L 25.8,54.978 L 25.874,54.884 Z M 32.326,55.031 L 36.958,56.396 L 35.761,56.088 L 32.326,55.031 Z M 28.853,55.257 L 29.884,55.57 L 29.601,55.774 C 28.65,56.528 27.757,57.421 26.923,58.24 L 26.55,58.594 L 26.686,57.745 L 26.84,56.442 L 27.985,55.765 C 28.247,55.618 28.517,55.466 28.773,55.309 L 28.853,55.257 Z M 30.392,55.725 L 31.45,56.046 L 30.77,56.578 C 30.212,57.041 29.659,57.51 29.123,57.998 L 26.19,60.853 L 26.494,58.949 L 26.975,58.509 C 27.837,57.707 28.759,56.853 29.722,56.168 L 30.392,55.725 Z M 32.13,56.253 L 35.615,57.312 L 34.576,58.037 C 33.569,58.769 32.6,59.527 31.636,60.315 C 31.169,60.696 30.724,61.093 30.274,61.493 L 29.662,62.063 L 28.442,61.803 L 28.575,61.686 C 29.486,60.845 30.384,59.992 31.329,59.19 C 31.636,58.929 31.958,58.677 32.28,58.434 C 32.417,58.331 32.561,58.236 32.696,58.131 C 32.994,57.9 33.315,57.685 33.635,57.486 C 33.786,57.388 33.828,57.184 33.73,57.033 C 33.632,56.882 33.428,56.84 33.277,56.938 C 32.06,57.687 31.049,58.7 30.038,59.699 C 29.488,60.242 28.953,60.802 28.4,61.343 L 28,61.709 L 26.735,61.44 L 26.145,61.33 L 26.874,60.62 C 27.045,60.452 27.226,60.289 27.401,60.125 C 27.999,59.567 28.61,59.024 29.236,58.498 C 30.109,57.763 30.999,57.076 31.921,56.405 L 32.13,56.253 Z M 26.433,56.806 L 26.428,56.932 L 26.265,58.865 L 26.026,59.081 C 26.083,58.469 26.137,57.842 26.168,57.23 L 26.169,56.941 L 26.312,56.853 L 26.433,56.806 Z M 37.344,56.837 L 38.929,57.316 L 38.113,57.891 L 36.463,57.39 L 37.344,56.837 Z M 36.27,57.511 L 37.94,58.018 L 36.614,59.066 C 35.463,59.999 34.36,60.988 33.25,61.969 L 32.437,62.681 L 31.53,62.462 L 30.097,62.156 L 30.398,61.876 C 30.656,61.648 30.91,61.409 31.176,61.191 C 31.582,60.858 31.987,60.528 32.4,60.202 C 33.303,59.488 34.251,58.814 35.219,58.171 L 36.27,57.511 Z M 39.7,57.549 L 41.585,58.119 L 41.439,58.186 L 40.589,58.644 L 38.842,58.113 L 39.7,57.549 Z M 38.655,58.236 L 40.376,58.759 L 39.832,59.053 C 39.576,59.202 39.332,59.381 39.088,59.549 C 38.698,59.817 38.318,60.098 37.946,60.39 C 37.248,60.937 36.571,61.505 35.913,62.094 L 34.723,63.234 L 32.799,62.769 L 33.697,61.997 C 34.135,61.62 34.581,61.245 35.032,60.883 C 35.794,60.271 36.564,59.666 37.355,59.092 L 38.655,58.236 Z M 42.571,58.406 L 43.389,58.642 L 47.929,59.854 L 46.842,60.543 L 44.546,59.845 L 43.508,59.531 L 43.476,59.323 C 43.386,59.176 43.191,59.129 43.044,59.219 L 42.872,59.337 L 42.271,59.155 L 42.501,58.79 C 42.528,58.723 42.574,58.601 42.575,58.528 L 42.571,58.406 Z M 41.867,58.708 L 41.853,58.86 L 41.807,59.014 L 41.451,58.906 L 41.867,58.708 Z M 41.231,59.019 L 41.759,59.179 L 41.722,59.306 C 41.667,59.472 41.627,59.643 41.582,59.812 C 41.657,59.738 41.754,59.661 41.837,59.596 L 42.153,59.299 L 42.692,59.462 L 41.518,60.278 C 41.328,60.428 41.132,60.572 40.945,60.726 C 40.417,61.161 39.895,61.61 39.389,62.071 L 37.398,63.903 L 36.69,63.711 L 35.112,63.329 L 36.424,62.137 C 37.193,61.513 37.997,60.933 38.844,60.388 L 41.231,59.019 Z M 26.239,59.182 L 26.209,59.542 L 26.058,60.464 L 26.036,60.291 L 25.978,60.001 L 25.979,59.883 L 26.008,59.393 L 26.239,59.182 Z M 43.422,59.684 L 44.272,59.942 L 43.622,60.463 C 43.043,60.902 42.453,61.326 41.873,61.764 C 41.049,62.386 40.151,63.042 39.39,63.791 L 38.918,64.314 L 37.906,64.04 L 38.758,63.269 C 39.852,62.293 40.956,61.346 42.162,60.513 C 42.557,60.24 42.961,60.001 43.372,59.755 L 43.422,59.684 Z M 48.752,60.074 L 49.269,60.212 L 50.708,60.61 L 50.074,61.008 L 49.522,61.358 L 47.691,60.801 L 48.585,60.288 L 48.752,60.074 Z M 44.783,60.097 L 46.65,60.664 L 46.032,61.056 C 45.317,61.549 44.618,62.066 43.932,62.599 C 43.476,62.954 43.016,63.303 42.563,63.662 C 42.337,63.841 42.088,64.017 41.874,64.208 L 41.042,64.915 L 39.521,64.478 L 39.319,64.423 L 39.949,63.766 C 40.318,63.439 40.709,63.135 41.08,62.871 C 41.54,62.543 41.995,62.221 42.463,61.905 C 42.981,61.556 43.514,61.218 44.022,60.856 C 44.246,60.696 44.467,60.534 44.691,60.375 C 44.756,60.324 44.794,60.252 44.804,60.175 L 44.783,60.097 Z M 51.565,60.847 L 52.661,61.151 L 55.754,62.139 L 54.996,62.446 L 54.358,62.829 L 53.306,62.509 L 53.483,62.402 C 53.656,62.293 53.708,62.063 53.599,61.89 C 53.49,61.717 53.26,61.665 53.087,61.774 L 52.416,62.238 L 50.351,61.61 L 51.511,60.921 L 51.565,60.847 Z M 47.487,60.919 L 49.331,61.479 L 48.221,62.185 C 47.811,62.443 47.414,62.723 47.009,62.99 C 46.472,63.343 45.964,63.72 45.44,64.089 C 45.069,64.351 44.675,64.65 44.327,64.942 C 44.227,65.026 44.118,65.104 44.017,65.188 L 43.523,65.629 L 41.627,65.084 L 41.715,65.02 C 41.911,64.885 42.116,64.749 42.307,64.607 C 42.448,64.502 42.586,64.385 42.725,64.277 C 43.544,63.64 44.36,63.021 45.199,62.41 C 45.497,62.193 45.808,61.97 46.118,61.771 C 46.422,61.576 46.72,61.367 47.03,61.182 L 47.487,60.919 Z M 50.151,61.729 L 52.236,62.362 L 48.638,64.854 L 46.333,66.471 L 44.657,65.956 L 44.056,65.783 L 44.86,65.097 C 45.553,64.568 46.272,64.072 47.005,63.598 L 50.151,61.729 Z M 26.106,61.793 L 27.573,62.101 L 27.182,62.459 L 26.097,62.215 L 25.935,62.19 L 25.976,61.974 L 26.106,61.793 Z M 25.581,61.904 L 25.651,62.005 L 25.805,62.021 L 25.782,62.166 L 25.454,62.116 L 25.386,62.104 L 25.581,61.904 Z M 28.006,62.192 L 29.33,62.47 L 29.42,62.531 L 29.55,62.594 L 29.654,62.554 L 31.91,63.144 L 31.571,63.463 L 28.73,62.809 L 27.599,62.554 L 28.006,62.192 Z M 56.347,62.328 L 57.197,62.6 L 58.29,62.958 L 58.226,62.955 C 57.785,62.991 57.408,63.189 57.006,63.359 L 56.659,63.528 L 55.238,63.096 L 56.347,62.328 Z M 53.11,62.628 L 54.16,62.947 L 53.704,63.222 C 53.373,63.44 53.04,63.653 52.714,63.879 C 52.354,64.128 51.991,64.375 51.637,64.632 C 50.981,65.108 50.346,65.618 49.696,66.103 L 48.339,67.087 L 46.888,66.641 L 49.455,64.913 C 50.03,64.53 50.618,64.167 51.198,63.791 L 53.11,62.628 Z M 58.501,63.027 L 59.382,63.316 L 59.967,63.507 L 58.747,64.163 L 57.688,63.841 L 57.897,63.756 C 57.991,63.718 58.098,63.69 58.186,63.642 C 58.268,63.597 58.343,63.549 58.42,63.497 C 58.569,63.444 58.647,63.278 58.594,63.129 L 58.501,63.027 Z M 55.049,63.217 L 56.434,63.638 L 55.425,64.133 C 54.814,64.468 54.204,64.822 53.605,65.179 C 52.697,65.721 51.816,66.329 50.89,66.841 C 50.563,67.021 50.237,67.197 49.908,67.372 L 49.775,67.531 L 49.661,67.493 L 49.023,67.296 L 49.273,67.123 C 50.148,66.505 51.029,65.895 51.915,65.293 C 52.487,64.904 53.042,64.497 53.623,64.12 C 53.881,63.952 54.139,63.782 54.399,63.618 L 55.049,63.217 Z M 32.258,63.235 L 34.194,63.741 L 33.998,63.93 L 33.998,64.087 L 32.792,63.776 L 31.881,63.559 L 32.258,63.235 Z M 61.121,63.737 L 63.06,64.392 L 63.62,64.598 L 63.674,65.662 L 62.031,65.133 C 62.074,65.03 62.069,64.941 62.027,64.861 C 61.943,64.701 61.744,64.64 61.584,64.724 L 61.23,64.918 L 59.64,64.434 L 60.755,63.851 L 60.819,63.773 L 61.121,63.737 Z M 34.555,63.835 L 36.826,64.429 L 36.721,64.527 C 36.676,64.567 36.652,64.622 36.65,64.679 L 36.687,64.783 L 34.215,64.144 L 34.555,63.835 Z M 57.437,63.943 L 58.536,64.277 L 57.872,64.635 C 57.634,64.769 57.392,64.9 57.158,65.041 C 56.523,65.423 55.891,65.838 55.277,66.253 C 54.657,66.671 54.048,67.097 53.45,67.539 L 52.361,68.392 L 50.385,67.734 L 52.24,66.733 C 52.654,66.5 53.065,66.259 53.482,66.031 C 54.231,65.621 54.953,65.159 55.714,64.769 C 56.073,64.585 56.431,64.404 56.794,64.227 C 56.951,64.15 57.115,64.085 57.273,64.011 L 57.437,63.943 Z M 59.424,64.548 L 61.021,65.033 L 58.855,66.226 C 57.51,66.985 56.218,67.827 55.057,68.835 L 54.702,69.174 L 54.628,69.148 L 52.859,68.558 L 54.137,67.606 C 54.89,67.097 55.667,66.622 56.463,66.181 C 56.775,66.008 57.086,65.825 57.401,65.658 C 57.745,65.475 58.082,65.278 58.423,65.088 C 58.752,64.905 59.087,64.728 59.424,64.548 Z M 37.333,64.562 L 37.706,64.66 C 38.314,64.832 38.924,64.998 39.533,65.169 L 40.435,65.432 L 40.159,65.668 L 40.101,65.768 L 37.012,64.852 L 37.333,64.562 Z M 61.893,65.299 L 63.683,65.843 L 63.763,67.422 L 63.616,67.304 C 63.536,67.28 63.448,67.287 63.37,67.33 C 62.866,67.619 62.361,67.991 61.924,68.374 C 61.828,68.458 61.73,68.545 61.631,68.626 C 61.352,68.854 61.089,69.105 60.813,69.336 C 60.357,69.718 59.917,70.117 59.457,70.497 C 59.344,70.589 59.327,70.756 59.419,70.869 C 59.511,70.982 59.678,70.999 59.791,70.907 C 60.618,70.224 61.429,69.522 62.268,68.85 C 62.591,68.591 62.958,68.314 63.313,68.102 C 63.429,68.033 63.556,67.95 63.68,67.898 L 63.78,67.772 L 63.785,67.856 L 63.888,69.71 C 63.594,69.978 63.324,70.245 63.025,70.497 C 62.939,70.569 62.844,70.656 62.754,70.721 C 62.493,70.91 62.266,71.048 61.985,71.201 C 61.902,71.243 61.869,71.346 61.911,71.429 C 61.953,71.512 62.056,71.545 62.139,71.503 C 62.349,71.391 62.534,71.284 62.737,71.159 C 63.004,70.995 63.303,70.743 63.541,70.539 L 63.972,70.185 L 63.99,70.406 C 63.998,70.501 64.044,70.585 64.112,70.642 L 64.343,70.716 L 64.345,70.945 L 64.359,71.279 L 64.331,71.218 C 64.266,71.077 64.207,70.934 64.146,70.788 C 64.104,70.625 63.936,70.527 63.773,70.569 C 63.61,70.611 63.512,70.779 63.554,70.942 C 63.579,71.142 63.612,71.327 63.688,71.515 C 63.806,71.806 63.987,72.016 64.169,72.265 C 64.274,72.409 64.373,72.549 64.472,72.696 L 64.534,72.775 L 63.695,72.605 L 62.861,72.463 L 61.04,71.959 L 60.698,71.862 L 60.754,71.806 C 60.824,71.631 60.739,71.43 60.564,71.36 C 60.263,71.221 59.934,71.105 59.625,70.98 C 59.259,70.832 58.882,70.68 58.511,70.548 L 57.713,70.251 L 58.75,69.43 C 60.135,68.33 61.624,67.262 63.195,66.44 C 63.354,66.353 63.413,66.152 63.326,65.993 C 63.239,65.834 63.038,65.775 62.879,65.862 C 62.102,66.269 61.41,66.745 60.698,67.254 C 60.215,67.599 59.74,67.962 59.277,68.334 L 57.158,70.046 L 57.048,70.005 L 55.198,69.35 L 55.896,68.721 C 56.525,68.229 57.208,67.802 57.894,67.396 C 59.184,66.632 60.568,66.013 61.893,65.299 Z M 40.949,65.583 L 42.928,66.162 L 42.567,66.49 L 40.526,65.894 L 40.949,65.583 Z M 43.437,66.311 L 44.207,66.536 L 45.622,66.97 L 45.185,67.276 L 43.048,66.642 L 43.437,66.311 Z M 46.157,67.134 L 47.828,67.646 L 47.858,67.773 C 47.945,67.897 48.119,67.927 48.243,67.84 L 48.302,67.798 L 50.919,68.635 L 51.693,68.916 C 51.648,68.953 51.623,69.004 51.618,69.056 L 51.661,69.201 L 49.141,68.451 L 45.713,67.433 L 46.157,67.134 Z M 52.177,69.067 L 54.116,69.734 L 53.959,69.885 L 51.864,69.261 L 51.952,69.236 L 52.177,69.067 Z M 54.59,69.898 L 56.515,70.56 L 56.437,70.622 L 54.445,70.029 L 54.59,69.898 Z M 57.074,70.757 L 57.777,71.022 L 57.024,70.797 L 57.074,70.757 Z\"\n            stroke=\"none\"\n            fill=\"#ffffff\"\n            strokeWidth=\"0.5\"\n            fillRule=\"evenodd\"\n            markerStart=\"none\"\n            markerEnd=\"none\"\n            strokeMiterlimit=\"79.8403193612775\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport const arrow = (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    data-name=\"Layer 1\"\n    viewBox=\"0 0 100 125\"\n    x=\"0px\"\n    y=\"0px\"\n  >\n    <path\n      fill=\"#ffffff\"\n      d=\"M97.64,44.1,64.72,11.18a8.06,8.06,0,1,0-11.4,11.39L72.78,42H8.06a8.06,8.06,0,0,0,0,16.12H72.6L53.32,77.43a8.06,8.06,0,0,0,11.4,11.39L97.64,55.9A8,8,0,0,0,100,50.2a1.27,1.27,0,0,0,0-.2,1.41,1.41,0,0,0,0-.2A8.07,8.07,0,0,0,97.64,44.1Z\"\n    />\n  </svg>\n);\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {FormProps} from '../common/Types';\nimport './Form.css';\nimport { angry, sad, happy, chill, amorous, excited } from '../../utilities/icons';\n\nconst Form = ({ getMoodyTunes, updateMood }: FormProps) => {\n  const [mood, setMood] = useState('');\n  const [moodName, setMoodName] = useState('');\n  const [decade, setDecade] = useState('');\n\n  const handleClick = (event: MouseEvent) => {\n    getMoodyTunes(mood, decade);\n    updateMood(moodName)\n  }\n\nconst getStylings = (selector:string, elementId:string) => {\n  let className = selector === elementId ? 'selected-choice' : 'choice';\n  return className\n}\n\nconst handleMood = (moodNum: string, moodWord: string) => {\n  setMood(moodNum);\n  setMoodName(moodWord);\n}\n\nconst disableLink = () => {\n  let isDisabled = mood ? 'submit-link' : 'disabled-link';\n  return isDisabled\n}\n\nconst showActive = () => {\n  let isActive = mood ? 'submit-button' : 'submit-button-inactive';\n  return isActive\n}\n\n  return (\n    <div className='form-view'>\n      <form action=\"/action_page.php\">\n        <h2>Generate a list of songs that fit your mood.</h2>\n        <br/>\n        <p className='form-subheader'>Please select your <b>Mood</b>:</p>\n        <br/>\n        <div className='form-options'>\n          <p className= { `icon ${getStylings(mood, '580000,950000')}` } onClick={ event => handleMood('580000,950000', 'Happy') }>\n          { happy }\n          Happy\n          </p>\n          <p className= { `icon ${getStylings(mood, '235000,91000')}` } onClick={ event => handleMood('235000,91000', 'Sad') }>\n            { sad }\n          Sad\n          </p>\n          <p className= { `icon ${getStylings(mood, '100000,900000')}` } onClick={ event => handleMood('100000,900000', 'Chill') }>\n          { chill }\n          Chill\n          </p>\n          <p className= { `icon ${getStylings(mood, '925000, 607500')}` } onClick={ event => handleMood('925000, 607500', 'Amorous') }>\n          { amorous }\n          Amorous\n          </p>\n          <p className= { `icon ${getStylings(mood, '862500, 850000')}` } onClick={ event => handleMood('862500, 850000', 'Excited') }>\n          { excited }\n          Excited\n          </p>\n          <p className= { `icon ${getStylings(mood, '895000,295000')}` } onClick={ event => handleMood('895000,295000', 'Angry') }>\n          { angry }\n          Angry\n          </p>\n        </div>\n        <br/>\n\n        <p className='form-subheader'>Please select a <b>Decade</b>:</p>\n        <br/>\n        <div className='form-options decades'>\n        <p className={ `icon ${getStylings(decade, 'date50')}` } onClick={ event => setDecade('date50')}>1950s</p><br/>\n        <p className={ `icon ${getStylings(decade, 'date60')}` } onClick={ event => setDecade('date60')}>1960s</p><br/>\n        <p className={ `icon ${getStylings(decade, 'date70')}` } onClick={ event => setDecade('date70')}>1970s</p><br/>\n        <p className={ `icon ${getStylings(decade, 'date80')}` } onClick={ event => setDecade('date80')}>1980s</p><br/>\n        <p className={ `icon ${getStylings(decade, 'date90')}` } onClick={ event => setDecade('date90')}>1990s</p><br/>\n        <p className={ `icon ${getStylings(decade, 'date00')}` } onClick={ event => setDecade('date00')}>2000s</p><br/>\n        <p className={ `icon ${getStylings(decade, 'date10')}` } onClick={ event => setDecade('date10')}>2010s</p><br/>\n        </div>\n        <br/>\n        <Link\n          className={ disableLink() }\n          to='/results'>\n          <button\n            className={ showActive() }\n            onClick={ (event: React.MouseEvent<HTMLElement>) => handleClick(event as any) }>\n            Get Songs\n          </button>\n        </Link>\n      </form>\n    </div>\n   );\n}\n\nexport default Form;\n","const createUrl = (valence: string, arousal: string, decade: string) => {\n  return `https://git.heroku.com/serene-tor-02353.git/http://musicovery.com/api/V6/playlist.php?&fct=getfrommood&popularitymax=100&popularitymin=80&starttrackid=&trackvalence=${valence}&trackarousal=${arousal}&listenercountry=us&${decade}=true&resultsnumber=25`;\n};\n\nexport const getTracksByMoodAPI = async (\n  valence: string,\n  arousal: string,\n  decade: string\n) => {\n  console.log(valence)\n  console.log(arousal)\n  console.log(decade)\n  const response = await fetch(createUrl(valence, arousal, decade));\n  if (response.status >= 200 && response.status <= 299) {\n    const jsonResponse = await response.json();\n    return jsonResponse.tracks.track;\n  } else {\n    console.log(`Error! Code: ${response}`)\n    console.log(\"There seems to be a problem with the server. Please refresh the page.\");\n    return response.status;\n  }\n};\n\n// test endpoint for 500 errors @ (\"https://httpstat.us/500\");\n// https://thingproxy.freeboard.io/fetch/\n// https://cors-anywhere.herokuapp.com/\n","import { useState, useEffect } from \"react\";\nimport \"./Result.css\";\nimport { ResultProps } from \"../common/Types\";\nimport { gsap } from \"gsap\";\nimport { spotify } from \"../../utilities/icons\";\n\nconst Result = ({\n  id,\n  artist,\n  title,\n  releaseDate,\n  genre,\n  favoriteSongs,\n  addFavorite,\n}: ResultProps) => {\n  const [inFavorites, setInFavorites] = useState(false);\n\n  useEffect(() => {\n    checkFavoriteStatus();\n    // updateFavoriteStatus()\n  }, []);\n\n  const checkFavoriteStatus = () => {\n    const match = favoriteSongs.find(song => song.id === id);\n    if (match) {\n      setInFavorites(true);\n      animateAddFavorite();\n    } else {\n      setInFavorites(false);\n    }\n  };\n\n  const animateAddFavorite = () => {\n    let tl = gsap.timeline();\n    gsap.set(`.${\"--\" + id}`, {\n      //start animation state\n      transition: \"ease 0\",\n      transform: \"rotate(0deg)\",\n    });\n\n    tl.to(`.${\"--\" + id}`, { duration: 0.1, translateY: 3 })\n      .to(`.${\"--\" + id}`, { duration: 0.3, rotateY: 360, translateY: -10 })\n      .to(`.${\"--\" + id}`, { duration: 0.3, translateY: 0 })\n      .to(`.${\"--\" + id}`, { duration: 0.2, filter: \"grayscale(0%)\", cursor: \"default\" },\"-=.4\")\n      .to(`.title-artist-${id}`, { duration: \"0.2 !important\", color: \"rgb(253,235,103)\" }, \"-=.4\")\n      .to(`.badge-${id}`, { borderColor: \"rgb(253,235,103)\", backgroundColor: \"rgb(253,235,103)\", color: \"rgb(40,44,52)\"}, \"<\")\n      .to(`.card-${id}`, { border: \"solid 3px rgb(253,235,103)\" }, \"<\")\n      .to(`.${\"--\" + id}`, { ease: \"none\", duration: 8, repeat: -1, rotate: 360});\n      setInFavorites(true);\n  };\n\n  const handleClick = () => {\n    if (!inFavorites) {\n      addFavorite(id);\n      animateAddFavorite();\n    }\n  };\n\n  const searchSpotify = () => {\n    let searchParams = `${title}  artist:${artist}`;\n    window.open(`https://open.spotify.com/search/${searchParams}`);\n  };\n\n  const capitalize = (songInfo: string) => {\n    return (\n      songInfo.split(\" \")\n      .map(word => word.charAt(0).toUpperCase() + word.substring(1))\n      .join(\" \")\n    );\n  }\n\n  return (\n    <article className={`song-result card-${id}`} id={id}>\n      <div className=\"song-details\">\n        <div className={`title-artist title-artist-${id}`}>\n          <h1>{capitalize(title)}</h1>\n          <h3>{capitalize(artist)}</h3>\n        </div>\n        <div className=\"date-genre\">\n          <span className={`badge badge-${id}`}>\n            <b>Release Date:</b> {releaseDate}\n          </span>\n          <span className={`badge badge-${id}`}>\n            <b>Genre:</b> {capitalize(genre)}\n          </span>\n        </div>\n      </div>\n      <div className=\"button-container\">\n        <button onClick={() => searchSpotify()} className=\"spotify-button\" data-testid='spotify'>\n          {spotify}\n        </button>\n        <button\n          onClick={() => handleClick()}\n          className={`btn favoriteBtn --${id}`}>\n          ⭐\n        </button>\n      </div>\n    </article>\n  );\n};\n\nexport default Result;\n","import React, { useEffect } from \"react\";\nimport Result from \"../Result/Result\";\nimport {ResultsViewProps} from '../common/Types'\n\nconst ResultsView = ({ addFavorite, songResults, favoriteSongs, moodName }: ResultsViewProps) => {\n  useEffect(() => {\n    document.title = `MoodyTunes - Results (${songResults.length})`\n  }, [])\n\n  const songs = songResults.map(song => {\n    return (\n      <Result\n        key={song.id}\n        id={song.id}\n        artist={song.artist_display_name}\n        title={song.title}\n        releaseDate={song.releasedate}\n        genre={song.genre}\n        favoriteSongs={favoriteSongs}\n        addFavorite={addFavorite}\n      />\n    );\n  });\n  return (\n    <section className=\"results-view\">\n      <h2 className=\"container-title\">\n        \"{moodName}\" song results:\n      </h2>\n      {songs}\n    </section>\n  )\n};\n\nexport default ResultsView;\n","import React from \"react\";\nimport { FavoriteProps } from \"../common/Types\";\nimport \"./Favorite.css\";\nimport { spotify } from \"../../utilities/icons\";\n\nconst Favorite = ({\n  id,\n  artist,\n  title,\n  releaseDate,\n  genre,\n  removeFavorite,\n}: FavoriteProps) => {\n  const handleClick = () => {\n    removeFavorite(id);\n  };\n\n  const capitalize = (songInfo: string) => {\n    return (\n      songInfo.split(\" \")\n      .map(word => word.charAt(0).toUpperCase() + word.substring(1))\n      .join(\" \")\n    );\n  }\n\n  const searchSpotify = () => {\n    let searchParams = `${title}  artist:${artist}`;\n    window.open(`https://open.spotify.com/search/${searchParams}`);\n  };\n\n  return (\n    <article className=\"favorite\" id={id}>\n      <div className=\"fav-details\">\n        <div className=\"fav-title-artist\">\n          <h1>{capitalize(title)}</h1>\n          <h3>{capitalize(artist)}</h3>\n        </div>\n        <div className=\"fav-date-genre\">\n          <span className={`fav-badge`}>\n            <b>Release Date:</b> {releaseDate}\n          </span>\n          <span className={`fav-badge`}>\n            <b>Genre:</b> {capitalize(genre)}\n          </span>\n        </div>\n      </div>\n      <div className=\"fav-button-container\">\n        <button onClick={() => handleClick()} className=\"remove-fav-btn\">\n          Remove\n        </button>\n        <button onClick={() => searchSpotify()} className=\"spotify-button\" data-testid='spotify'>\n          {spotify}\n        </button>\n      </div>\n    </article>\n  );\n};\n\nexport default Favorite;\n","import React, {useEffect} from 'react';\nimport Favorite from '../Favorite/Favorite';\nimport './FavoritesView.css';\nimport { arrow } from '../../utilities/icons'; \nimport { Link } from \"react-router-dom\";\n\n\ninterface FavoritesViewProps {\n  favoriteSongs: {\n    id: string,\n    artist_display_name: string,\n    title: string,\n    releasedate: string,\n    genre: string\n  }[];\n  removeFavorite: Function;\n}\n\n\nconst FavoritesView = ({favoriteSongs, removeFavorite}: FavoritesViewProps) => {\n  useEffect(() => {\n    document.title = `MoodyTunes - Favorites (${favoriteSongs.length})`\n  }, [])\n  \n  if (favoriteSongs.length === 0) {\n      return (\n    <section className='no-favorites'>\n      <header className='favorites-header'>\n        <h2>Favorites View</h2>\n      </header>\n      <br/>\n      <p>You currently do not have any favorite songs. <br/><br/>\n      Click the '⭐️' to add a song to your Favorites.\n      </p>\n    </section>\n   );\n  } else {\n  const favorites = favoriteSongs.map((fav: any) => {\n    return (\n      <Favorite\n        key={`${fav.id}1`}\n        id={fav.id}\n        artist={fav.artist_display_name}\n        title={fav.title}\n        releaseDate={fav.releasedate}\n        genre={fav.genre}\n        favoriteSongs={favoriteSongs}\n        removeFavorite={removeFavorite}\n      />\n    );\n  });\n  return (\n    <section className='favorites-view'>\n        <header className='favorites-header'>\n          <Link to='/results' className='back-arrow'>{ arrow }</Link>\n          <h2>Favorites View</h2>\n        </header>\n      <article className='favs-container'>\n        { favorites }\n      </article>\n    </section>\n   );\n  } \n}\n\nexport default FavoritesView;\n","import { useState, useEffect } from 'react';\n\ntype ReturnType<T> = [\n  T | undefined,\n  React.Dispatch<React.SetStateAction<T | undefined>>\n];\n\nexport const useLocalStorage = <T,>\n(key: string, initialValue?: T): ReturnType<T> => {\n  const [state, setState] = useState<T | undefined>(() => {\n       if (!initialValue) {\n        const value = localStorage.getItem(key);\n        return value ? JSON.parse(value) : console.log('no items in storage')\n       }\n  });\n\n  useEffect(() => {\n    if (state) {\n      try {\n        localStorage.setItem(key, JSON.stringify(state));\n        \n      } \n      catch (err) {\n        console.log(err);\n      }\n    }\n  }, [state, key]);\n  return [state, setState];\n};\n","import { Link } from \"react-router-dom\";\nimport { musicNote } from '../../utilities/icons';\nimport './NavBar.css';\nimport React from \"react\";\n\n\nconst NavBar = ({clearMoodName}: any) => {\n  const handleClick = () => {\n    clearMoodName();\n  }\n\n  return (\n    <header className=\"app-header\">\n      <Link to=\"/\" className=\"app-name-link\">\n        <h1 onClick={ handleClick }>MoodyTunes</h1>\n      </Link>\n      <nav className='link-container'>\n        <Link to=\"/\" className=\"nav-btn-link\">\n          <div\n            className=\"nav-btn\"\n            onClick={ handleClick }>Home\n          </div>\n        </Link>\n        <Link to='/favorites' className='nav-btn-link'>\n          <div className='nav-btn'>Favorites</div>\n        </Link>\n      </nav>\n    </header>\n  )\n}\n\nexport default NavBar;\n","import React, { useState, useEffect } from \"react\";\nimport Form from \"../Form/Form\";\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { getTracksByMoodAPI } from \"../../utilities/apiCalls\";\nimport ResultsView from \"../ResultsView/ResultsView\";\nimport FavoritesView from \"../FavoritesView/FavoritesView\";\nimport { ISongResults } from \"../common/Types\";\nimport { useLocalStorage } from \"../../utilities/useLocalStorage\";\nimport NavBar from \"../NavBar/NavBar\";\n\nfunction App() {\n  const [songResults, setSongResults] = useState([]);\n  const [favoriteSongs, setFavoriteSongs] = useState<ISongResults[]>([]);\n  const [localStorage, setLocalStorage] = useLocalStorage(\"favorites\");\n  const [moodName, setMoodName] = useState(\"\");\n\n  useEffect(() => {\n    let storedFavs: any = localStorage;\n    storedFavs = storedFavs ? storedFavs : [];\n    setFavoriteSongs(storedFavs);\n  }, []);\n\n  const getMoodyTunes = async (mood: string, decade: string) => {\n    const arousal: string = mood.split(\",\")[0];\n    const valence: string = mood.split(\",\")[1];\n    const results = await getTracksByMoodAPI(valence, arousal, decade);\n    setSongResults(results);\n  };\n\n  const updateMoodName = (moodWord: string) => {\n    setMoodName(moodWord);\n  };\n\n  const clearMoodName = () => {\n    setMoodName(\"\");\n  };\n\n  const addFavorite = (id: string) => {\n    const favorite = songResults.find(\n      (song: ISongResults) => song.id === id\n    ) as any;\n    if (favoriteSongs === undefined) {\n      setFavoriteSongs([favorite]);\n      setLocalStorage(favoriteSongs);\n    } else if (!favoriteSongs.includes(favorite)) {\n      setFavoriteSongs([favorite, ...favoriteSongs]);\n      setLocalStorage([favorite, ...favoriteSongs]);\n    }\n  };\n\n  const removeFavorite = (id: string) => {\n    const favorites = favoriteSongs.filter(\n      (song: ISongResults) => song.id !== id\n    ) as any;\n    setFavoriteSongs(favorites);\n    setLocalStorage(favorites);\n  };\n\n  const checkSongResults = () => {\n    if (!songResults) {\n      return (\n        <h2>\n          Sorry, there are no results for that selection.\n          <br />\n          <p>Click the \"Home\" or \"back\" button to try again.</p>\n        </h2>\n      );\n    } else if (songResults.length) {\n      return (\n        <ResultsView\n          addFavorite={addFavorite}\n          songResults={songResults}\n          moodName={moodName}\n          favoriteSongs={favoriteSongs as any}\n        />\n      );\n    } else if (!songResults.length) {\n      return (\n        <h2>\n          <br />\n          One moment while your song results load...\n          <br />\n        </h2>\n      );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <NavBar clearMoodName={clearMoodName} />\n      <Routes>\n        <Route\n          path=\"/favorites\"\n          element={\n            <FavoritesView\n              removeFavorite={removeFavorite}\n              favoriteSongs={favoriteSongs}\n            />\n          }\n        />\n        <Route path=\"/results\" element={checkSongResults()} />\n        <Route\n          path=\"/\"\n          element={\n            <Form getMoodyTunes={getMoodyTunes} updateMood={updateMoodName} />\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = <BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>\n// const router = <BrowserRouter basename='/moodytunes'><App /></BrowserRouter>\n\nReactDOM.render(\n  router,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}